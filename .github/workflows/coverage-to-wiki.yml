name: Push Coverage to Wiki

# Description: This workflow generates test coverage reports and pushes them to the wiki.
# It runs on pushes to main and pull requests.
# Key actions: Go tests, coverage badge generation, wiki update

on:
  push:
    branches: [main]
  pull_request:

jobs:
  push-coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: 1.22

      - name: Generate coverage report and badge
        run: |
          # Ensure we're in the right directory and Go modules are available
          export GO111MODULE=on
          go mod tidy
          # Run only template rendering tests that don't require external dependencies
          go test -coverprofile=coverage.out -run "TestPrintWorkingDirectory|TestRenderDependabotTemplate|TestRenderCodeQLTemplate|TestRenderCIEnforcementTemplate" ./test
          go tool cover -html=coverage.out -o coverage.html
          go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//' > pct.txt
          echo '<svg xmlns="http://www.w3.org/2000/svg" width="150" height="20"><rect width="150" height="20" fill="#555"/><rect x="70" width="80" height="20" fill="#4c1"/><text x="5" y="14" fill="#fff" font-family="Verdana" font-size="11">coverage</text><text x="75" y="14" fill="#fff" font-family="Verdana" font-size="11">'$(cat pct.txt)'%</text></svg>' > coverage.svg
        working-directory: ${{ github.workspace }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push coverage to wiki
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git wiki
          cp coverage.html coverage.svg wiki/
          cd wiki
          git add coverage.html coverage.svg
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit, coverage report is up to date"
          else
            git commit -m "Update coverage report"
            git push
            echo "Coverage report updated successfully"
          fi
