name: Build

# Description: This workflow runs SonarCloud analysis on main branch and pull requests,
# validates Terraform code, and performs security scanning.
# Key actions: Go setup, test coverage analysis, SonarCloud scanning, Terraform validation

# Minimal permissions for security hardening
permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Standard Terraform validation job (not using reusable workflow)
  terraform-validation:
    name: "Terraform Validation"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "latest"
      
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init -backend=false
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v5.0.0
        with:
          tflint_version: latest
      
      - name: Run TFLint
        run: tflint --format compact
      
  # Security scanning with Trivy
  security-scan:
    name: "Security Scanning"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          ignore-unfixed: true
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@d6bbdef45e766d081b84a2def353b0055f728d3e # v3.29.3
        with:
          sarif_file: 'trivy-results.sarif'
  
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    # Specific permissions needed for SonarCloud analysis
    permissions:
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: '1.22'
          cache: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: latest
      
      - name: Run Go tests with coverage
        run: |
          export GO111MODULE=on
          go mod tidy
          # Run template rendering tests that don't require external dependencies
          go test -coverprofile=coverage.out -run "TestPrintWorkingDirectory|TestRenderDependabotTemplate|TestRenderCodeQLTemplate|TestRenderCIEnforcementTemplate" ./test
          go tool cover -func=coverage.out > coverage.txt
        working-directory: ${{ github.workspace }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Check SonarCloud Configuration
        id: check_sonar
        run: |
          if [[ -n "${{ secrets.SONAR_TOKEN }}" ]]; then
            echo "sonar_enabled=true" >> $GITHUB_OUTPUT
            echo "::notice title=SonarCloud::SONAR_TOKEN configured - running SonarCloud analysis"
          else
            echo "sonar_enabled=false" >> $GITHUB_OUTPUT
            echo "::notice title=SonarCloud::SONAR_TOKEN not configured - skipping SonarCloud analysis"
            echo "To enable SonarCloud analysis, configure SONAR_TOKEN as a repository secret"
          fi

      - name: SonarCloud Scan
        if: steps.check_sonar.outputs.sonar_enabled == 'true'
        uses: SonarSource/sonarqube-scan-action@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  mkdocs-deploy:
    name: "MkDocs Build and Deploy"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      # Always check out the main branch, never gh-pages
      - name: Checkout main branch
        uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install MkDocs, Material theme, and plugins
        run: |
          pip install mkdocs mkdocs-material mkdocs-minify-plugin mkdocs-git-revision-date-localized-plugin mkdocs-git-committers-plugin-2
      - name: Build documentation
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdocs build --strict
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          
  workflow-summary:
    name: "Build Workflow Summary"
    needs: [terraform-validation, security-scan, sonarcloud]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Generate Build Summary
        run: |
          echo "## Build Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | ------ |" >> $GITHUB_STEP_SUMMARY
          echo "| Terraform Validation | ${{ needs.terraform-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Scanning | ${{ needs.security-scan.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SonarCloud | ${{ needs.sonarcloud.result }} |" >> $GITHUB_STEP_SUMMARY