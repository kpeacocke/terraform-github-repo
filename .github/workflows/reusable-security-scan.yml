name: Reusable Security Scanning

# Description: This is a reusable workflow for security scanning with Trivy
# It can be called by other workflows to provide standardized security scanning

on:
  workflow_call:
    inputs:
      working_directory:
        description: 'Directory to scan'
        type: string
        default: '.'
      target_type:
        description: 'Type of target to scan (fs, repo, image)'
        type: string
        default: 'fs'
      format:
        description: 'Output format (sarif, json, table)'
        type: string
        default: 'sarif'
      severity:
        description: 'Severities to filter (UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL)'
        type: string
        default: 'MEDIUM,HIGH,CRITICAL'
      upload_to_security_tab:
        description: 'Whether to upload results to GitHub Security tab'
        type: boolean
        default: true

jobs:
  security-scan:
    name: "Security Scan"
    runs-on: ubuntu-latest
    
    # Least-privilege permissions for the job
    permissions:
      contents: read
      security-events: write  # Needed to upload SARIF results
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO- https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy


      - name: Run Trivy vulnerability scanner
        run: |
          if [ "${{ inputs.target_type }}" = "image" ]; then
            trivy image --skip-version-check --config trivy.yaml --skip-files '.github/codeql/queries/*' --format ${{ inputs.format }} --output trivy-results.${{ inputs.format }} --severity ${{ inputs.severity }} --exit-code 0 --ignore-unfixed "${{ inputs.working_directory }}"
          else
            trivy ${{ inputs.target_type }} --skip-version-check --config trivy.yaml --skip-files '.github/codeql/queries/*' --format ${{ inputs.format }} --output trivy-results.${{ inputs.format }} --severity ${{ inputs.severity }} --exit-code 0 --ignore-unfixed "${{ inputs.working_directory }}"
          fi
          echo "\n--- Trivy Findings Causing Failure (Top 100) ---"
          if command -v jq >/dev/null 2>&1; then
            jq '.runs[].results[] | select(.level=="error" or .level=="warning")' trivy-results.sarif | head -100
          else
            grep -E '"level": "(error|warning)"' trivy-results.sarif | head -100
          fi
          echo "--- End Trivy Findings ---\n"
          # Now rerun with exit code 1 for CI fail if there are findings
          if [ "${{ inputs.target_type }}" = "image" ]; then
            trivy image --skip-version-check --config trivy.yaml --skip-files '.github/codeql/queries/*' --format ${{ inputs.format }} --output /dev/null --severity ${{ inputs.severity }} --exit-code 1 --ignore-unfixed "${{ inputs.working_directory }}"
          else
            trivy ${{ inputs.target_type }} --skip-version-check --config trivy.yaml --skip-files '.github/codeql/queries/*' --format ${{ inputs.format }} --output /dev/null --severity ${{ inputs.severity }} --exit-code 1 --ignore-unfixed "${{ inputs.working_directory }}"
          fi
      
      - name: Upload Trivy scan results to GitHub Security tab
        if: inputs.upload_to_security_tab == true && inputs.format == 'sarif'
        uses: github/codeql-action/upload-sarif@64d10c13136e1c5bce3e5fbde8d4906eeaafc885 # v3.30.6
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Upload scan results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-results
          path: trivy-results.*
          retention-days: 5
