{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Terraform GitHub Repository Module","text":"<ul> <li> <p>:material-rocket-launch:{ .lg .middle } Quick Start</p> <p>Get up and running with the module in minutes</p> <p>:octicons-arrow-right-24: Getting Started</p> </li> <li> <p>:material-shield-check:{ .lg .middle } Security First</p> <p>Built-in security scanning, compliance, and governance</p> <p>:octicons-arrow-right-24: Security Features</p> </li> <li> <p>:material-book-open:{ .lg .middle } Examples</p> <p>Real-world usage examples for every scenario</p> <p>:octicons-arrow-right-24: View Examples</p> </li> <li> <p>:material-api:{ .lg .middle } API Reference</p> <p>Complete documentation of inputs, outputs, and resources</p> <p>:octicons-arrow-right-24: API Docs</p> </li> </ul>"},{"location":"#overview","title":"Overview","text":"<p>The Terraform GitHub Repository Module is a comprehensive solution for managing GitHub repositories with enterprise-grade security, compliance, and DevOps automation.</p> <p>Latest Version</p> <p></p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>GitFlow Enforcement - Automatic branch protection with required status checks</li> <li>Security Scanning - Integrated CodeQL analysis and secret scanning  </li> <li>Dependency Management - Automated Dependabot with auto-merge capabilities</li> <li>Compliance Ready - SOC2, ISO27001, and enterprise governance features</li> <li>Template Bootstrap - Auto-generates standard files (README, LICENSE, SECURITY.md)</li> <li>Policy Enforcement - Open Policy Agent integration for custom compliance rules</li> </ul>"},{"location":"#architecture-overview","title":"Architecture Overview","text":"<p>```mermaid graph TB     A[Terraform Module] \u2192 B[GitHub Repository]     B \u2192 C[Branch Protection]     B \u2192 D[Security Features]     B \u2192 E[Automation]</p> <pre><code>C --&gt; C1[Main Branch]\nC --&gt; C2[Release Branches]\nC --&gt; C3[Required Checks]\n\nD --&gt; D1[CodeQL Scanning]\nD --&gt; D2[Secret Scanning]\nD --&gt; D3[Dependabot]\n\nE --&gt; E1[Auto-merge]\nE --&gt; E2[PR Templates] \nE --&gt; E3[Issue Templates]\n\nstyle A fill:#623CE4\nstyle B fill:#24292e\nstyle C fill:#28a745\nstyle D fill:#dc3545\nstyle E fill:#ffc107\n</code></pre> <p>```</p>"},{"location":"#quick-example","title":"Quick Example","text":"main.tf<pre><code>module \"github_repo\" {\n  source = \"kpeacocke/terraform-github-repo/github\"\n\n  name       = \"my-secure-repo\"\n  owners     = [\"@security-team\"]\n  visibility = \"private\"\n\n  # Security &amp; Compliance\n  enforce_gitflow   = true\n  enforce_security  = true  \n  enable_codeql     = true\n  enable_dependabot = true\n\n  # Automation\n  allow_auto_merge = true\n  enable_dependabot_autoapprove = true\n}\n</code></pre>"},{"location":"#whats-new","title":"What's New","text":"<p>Latest Updates</p> <ul> <li>\u2705 Enhanced CodeQL custom queries</li> <li>\u2705 Improved Dependabot auto-merge logic</li> <li>\u2705 New compliance reporting features</li> <li>\u2705 Advanced policy enforcement</li> </ul>"},{"location":"#support","title":"Support","text":""},{"location":"#community-support","title":"Community Support","text":"<ul> <li>:material-chat:{ .lg .middle } Community Support   Get help from the community :octicons-arrow-right-24: Discussions</li> </ul>"},{"location":"#report-issues","title":"Report Issues","text":"<ul> <li>:material-bug:{ .lg .middle } Report Issues   Found a bug? Report it here :octicons-arrow-right-24: Issues</li> </ul>"},{"location":"#enterprise-support","title":"Enterprise Support","text":"<ul> <li>:material-email:{ .lg .middle } Enterprise Support   Professional support available :octicons-arrow-right-24: Contact Us</li> </ul>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#11410-2025-07-10","title":"1.14.10 (2025-07-10)","text":""},{"location":"changelog/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>mute notifications for new GitHub repository to suppress creation and workflow emails (47c5f6b)</li> </ul>"},{"location":"changelog/#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.9 (31f9c0d)</li> </ul> <p>Generating notes for 1.14.10</p>"},{"location":"changelog/#1149-2025-07-09","title":"1.14.9 (2025-07-09)","text":""},{"location":"changelog/#bug-fixes_1","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update Trivy commands to skip CodeQL queries and specify provider versions in README (bb1b5de)</li> </ul>"},{"location":"changelog/#documentation_1","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.8 (34245fb)</li> </ul> <p>Generating notes for 1.14.9</p>"},{"location":"changelog/#1148-2025-07-09","title":"1.14.8 (2025-07-09)","text":""},{"location":"changelog/#bug-fixes_2","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update Dependabot workflow to use pull_request_target and correct token usage (1712cea)</li> </ul>"},{"location":"changelog/#documentation_2","title":"\ud83d\udcda Documentation","text":"<ul> <li>deps: bump packaging from 23.2 to 25.0 in /docs (a28e8a6)</li> <li>update changelog for v1.14.7 (3e2d9d4)</li> <li>update terraform-docs [skip ci] (09ddbc5)</li> </ul> <p>Generating notes for 1.14.8</p>"},{"location":"changelog/#1147-2025-07-06","title":"1.14.7 (2025-07-06)","text":""},{"location":"changelog/#bug-fixes_3","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update trivy.yaml to change filePatterns to skip-files (e9c233e)</li> </ul>"},{"location":"changelog/#documentation_3","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.6 (3f696a1)</li> </ul> <p>Generating notes for 1.14.7</p>"},{"location":"changelog/#1146-2025-07-06","title":"1.14.6 (2025-07-06)","text":""},{"location":"changelog/#bug-fixes_4","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update Trivy configuration and remove obsolete ignore patterns (2337c4e)</li> </ul>"},{"location":"changelog/#documentation_4","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.5 (458f566)</li> </ul> <p>Generating notes for 1.14.6</p>"},{"location":"changelog/#1145-2025-07-06","title":"1.14.5 (2025-07-06)","text":""},{"location":"changelog/#bug-fixes_5","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update GitHub token variable in Dependabot workflow and enhance .trivyignore for CodeQL tests (5213ee2)</li> </ul>"},{"location":"changelog/#documentation_5","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.4 (eae4252)</li> </ul> <p>Generating notes for 1.14.5</p>"},{"location":"changelog/#1144-2025-07-06","title":"1.14.4 (2025-07-06)","text":""},{"location":"changelog/#bug-fixes_6","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance security scanning by adding .trivyignore support and conditional Terraform plan execution (18636f2)</li> </ul>"},{"location":"changelog/#documentation_6","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.3 (5befdea)</li> </ul> <p>Generating notes for 1.14.4</p>"},{"location":"changelog/#1143-2025-07-05","title":"1.14.3 (2025-07-05)","text":""},{"location":"changelog/#bug-fixes_7","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update environment variable names and improve Terraform command options in Dependabot workflow (6465066)</li> </ul>"},{"location":"changelog/#documentation_7","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.2 (66b1880)</li> </ul> <p>Generating notes for 1.14.3</p>"},{"location":"changelog/#1142-2025-07-05","title":"1.14.2 (2025-07-05)","text":""},{"location":"changelog/#bug-fixes_8","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update GITHUB_TOKEN usage and improve Trivy exit code handling in workflows (73e9bcb)</li> </ul>"},{"location":"changelog/#documentation_8","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.1 (c5eeece)</li> </ul> <p>Generating notes for 1.14.2</p>"},{"location":"changelog/#1141-2025-07-05","title":"1.14.1 (2025-07-05)","text":""},{"location":"changelog/#bug-fixes_9","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update GITHUB_TOKEN to use GIT_COMMITTERS_TOKEN for Go tests (298f164)</li> </ul>"},{"location":"changelog/#documentation_9","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.14.0 (8189bdb)</li> </ul> <p>Generating notes for 1.14.1</p>"},{"location":"changelog/#1140-2025-07-04","title":"1.14.0 (2025-07-04)","text":""},{"location":"changelog/#features","title":"\ud83d\ude80 Features","text":"<ul> <li>add github_owner and github_token variables for API access (25648f6)</li> </ul>"},{"location":"changelog/#documentation_10","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.13.1 (1425006)</li> </ul> <p>Generating notes for 1.14.0</p>"},{"location":"changelog/#1131-2025-07-04","title":"1.13.1 (2025-07-04)","text":""},{"location":"changelog/#bug-fixes_10","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add environment variables for GitHub token and repository details in Dependabot workflow (e24f689)</li> </ul>"},{"location":"changelog/#documentation_11","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.13.0 (4d0f19e)</li> </ul> <p>Generating notes for 1.13.1</p>"},{"location":"changelog/#1130-2025-07-04","title":"1.13.0 (2025-07-04)","text":""},{"location":"changelog/#features_1","title":"\ud83d\ude80 Features","text":"<ul> <li>add TF_VAR_visibility variable to dependabot workflow and update Trivy installation steps in security scan (917f5a3)</li> </ul>"},{"location":"changelog/#bug-fixes_11","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>rename TF_VAR_github_owner to TF_VAR_owner for consistency in workflow (5a15901)</li> </ul>"},{"location":"changelog/#documentation_12","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.12.5 (7f61ee0)</li> </ul> <p>Generating notes for 1.13.0</p>"},{"location":"changelog/#1125-2025-07-04","title":"1.12.5 (2025-07-04)","text":""},{"location":"changelog/#bug-fixes_12","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update security scanning workflow to use conditional Trivy commands and improve README update process (448850f)</li> </ul>"},{"location":"changelog/#documentation_13","title":"\ud83d\udcda Documentation","text":"<ul> <li>deps: bump mkdocs-git-revision-date-localized-plugin in /docs (d7c1c62)</li> <li>deps: bump pygments from 2.16.1 to 2.19.2 in /docs (f0c4089)</li> <li>update changelog for v1.12.4 (f6e134f)</li> <li>update terraform-docs [skip ci] (fe90b09)</li> <li>update terraform-docs [skip ci] (b2906fb)</li> </ul> <p>Generating notes for 1.12.5</p>"},{"location":"changelog/#1124-2025-07-04","title":"1.12.4 (2025-07-04)","text":""},{"location":"changelog/#bug-fixes_13","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add security-events permission for latest Terraform validation job (7b102ad)</li> </ul>"},{"location":"changelog/#documentation_14","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.12.3 (860e76a)</li> </ul> <p>Generating notes for 1.12.4</p>"},{"location":"changelog/#1123-2025-07-02","title":"1.12.3 (2025-07-02)","text":""},{"location":"changelog/#bug-fixes_14","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update permissions for security-events in Dependabot workflow (a582c8f)</li> </ul>"},{"location":"changelog/#documentation_15","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.12.2 (5d5c3f0)</li> </ul> <p>Generating notes for 1.12.3</p>"},{"location":"changelog/#1122-2025-06-29","title":"1.12.2 (2025-06-29)","text":""},{"location":"changelog/#bug-fixes_15","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>ensure latest gh-pages branch is fetched and rebased before deployment (d57afe5)</li> </ul>"},{"location":"changelog/#documentation_16","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.12.1 (bb4886b)</li> </ul> <p>Generating notes for 1.12.2</p>"},{"location":"changelog/#1121-2025-06-29","title":"1.12.1 (2025-06-29)","text":""},{"location":"changelog/#bug-fixes_16","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update workflow paths to use local reusable workflows (af7f2cc)</li> </ul>"},{"location":"changelog/#documentation_17","title":"\ud83d\udcda Documentation","text":"<ul> <li>deps: bump markupsafe from 2.1.3 to 3.0.2 in /docs (9ad6ecf)</li> <li>deps: bump pymdown-extensions from 10.3.1 to 10.16 in /docs (d1af6a9)</li> <li>deps: bump pyyaml from 6.0.1 to 6.0.2 in /docs (712b5d0)</li> <li>update changelog for v1.12.0 (492a670)</li> <li>update provider versions in README for clarity (a4fe915)</li> <li>update terraform-docs [skip ci] (54bf4be)</li> <li>update terraform-docs [skip ci] (299016f)</li> <li>update terraform-docs [skip ci] (d3ca72f)</li> </ul> <p>Generating notes for 1.12.1</p>"},{"location":"changelog/#1120-2025-06-28","title":"1.12.0 (2025-06-28)","text":""},{"location":"changelog/#features_2","title":"\ud83d\ude80 Features","text":"<ul> <li>tests: enhance integration tests for GitHub repository validation and add debug controls (af04cb4)</li> </ul>"},{"location":"changelog/#bug-fixes_17","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>workflow: update reusable workflow paths to use GitHub's official repository (900fb5f)</li> </ul>"},{"location":"changelog/#documentation_18","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.11.0 (a285cc2)</li> </ul> <p>Generating notes for 1.12.0</p>"},{"location":"changelog/#1110-2025-06-28","title":"1.11.0 (2025-06-28)","text":""},{"location":"changelog/#features_3","title":"\ud83d\ude80 Features","text":"<ul> <li>workflow: add security-events permission for Dependabot validation jobs (3b4e7c7)</li> <li>vscode: add settings and tasks for Go and Ruby testing (784479b)</li> </ul>"},{"location":"changelog/#documentation_19","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.7 (dfb6cbf)</li> </ul> <p>Generating notes for 1.11.0</p>"},{"location":"changelog/#1107-2025-06-24","title":"1.10.7 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_18","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>simplify mike alias conflict resolution script and update git author information (311027e)</li> </ul>"},{"location":"changelog/#documentation_20","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.6 (f595dee)</li> </ul> <p>Generating notes for 1.10.7</p>"},{"location":"changelog/#1106-2025-06-24","title":"1.10.6 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_19","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update conflict resolution script execution in documentation workflow (4d9552a)</li> </ul>"},{"location":"changelog/#documentation_21","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.5 (309332b)</li> </ul> <p>Generating notes for 1.10.6</p>"},{"location":"changelog/#1105-2025-06-24","title":"1.10.5 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_20","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance Git repository checks in documentation deployment workflow (0c9d37b)</li> </ul>"},{"location":"changelog/#documentation_22","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.4 (a1a0b58)</li> </ul> <p>Generating notes for 1.10.5</p>"},{"location":"changelog/#1104-2025-06-24","title":"1.10.4 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_21","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update mike deployment commands to remove --force flag and improve reliability (9cd699b)</li> </ul>"},{"location":"changelog/#documentation_23","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.3 (9c739ab)</li> </ul> <p>Generating notes for 1.10.4</p>"},{"location":"changelog/#1103-2025-06-24","title":"1.10.3 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_22","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance mike alias conflict resolution and improve documentation workflow (f943707)</li> </ul>"},{"location":"changelog/#documentation_24","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.2 (3661362)</li> </ul> <p>Generating notes for 1.10.3</p>"},{"location":"changelog/#1102-2025-06-24","title":"1.10.2 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_23","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance documentation workflow and validate mkdocs configuration (df5c814)</li> </ul>"},{"location":"changelog/#documentation_25","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.1 (cc7c07e)</li> </ul> <p>Generating notes for 1.10.2</p>"},{"location":"changelog/#1101-2025-06-24","title":"1.10.1 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_24","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update badge links in README for module version and downloads (3a41e8c)</li> </ul>"},{"location":"changelog/#documentation_26","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.10.0 (2330a8b)</li> </ul> <p>Generating notes for 1.10.1</p>"},{"location":"changelog/#1100-2025-06-24","title":"1.10.0 (2025-06-24)","text":""},{"location":"changelog/#features_4","title":"\ud83d\ude80 Features","text":"<ul> <li>add validation for 'owners' and 'visibility' variables in Terraform module (7277e9e)</li> </ul>"},{"location":"changelog/#bug-fixes_25","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update GitHub and null provider versions in README (b854e31)</li> </ul>"},{"location":"changelog/#documentation_27","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.9.2 (78d107d)</li> </ul> <p>Generating notes for 1.10.0</p>"},{"location":"changelog/#192-2025-06-24","title":"1.9.2 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_26","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update CI workflow to use GIT_COMMITTERS_TOKEN and enhance drift detection logic (fb74a28)</li> <li>update drift check script to accept additional arguments and improve OpenTofu installation method (e1180dd)</li> </ul>"},{"location":"changelog/#documentation_28","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.9.1 (1cf1b9d)</li> <li>update terraform-docs [skip ci] (f424ca8)</li> </ul> <p>Generating notes for 1.9.2</p>"},{"location":"changelog/#191-2025-06-24","title":"1.9.1 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_27","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance drift check script and update OpenTofu installation method (6c61ea7)</li> </ul>"},{"location":"changelog/#documentation_29","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.9.0 (0483b94)</li> </ul> <p>Generating notes for 1.9.1</p>"},{"location":"changelog/#190-2025-06-24","title":"1.9.0 (2025-06-24)","text":""},{"location":"changelog/#features_5","title":"\ud83d\ude80 Features","text":"<ul> <li>update provider versions and add sample plans for S3 and IAM resources (3fc1b13)</li> </ul>"},{"location":"changelog/#bug-fixes_28","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update OPA lint command and improve OpenTofu installation process (e1194f3)</li> </ul>"},{"location":"changelog/#documentation_30","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.8.9 (2cd0c5f)</li> <li>update terraform-docs [skip ci] (4b9c516)</li> </ul> <p>Generating notes for 1.9.0</p>"},{"location":"changelog/#189-2025-06-24","title":"1.8.9 (2025-06-24)","text":""},{"location":"changelog/#documentation_31","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.8.8 (dd5e280)</li> </ul>"},{"location":"changelog/#code-refactoring","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>standardize deny message handling across policies (cdfbbc6)</li> </ul> <p>Generating notes for 1.8.9</p>"},{"location":"changelog/#188-2025-06-24","title":"1.8.8 (2025-06-24)","text":""},{"location":"changelog/#documentation_32","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.8.7 (45d5ca1)</li> </ul>"},{"location":"changelog/#code-refactoring_1","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>improve readability of S3 server-side encryption check in guardrails policy (6e0e6c6)</li> <li>standardize deny message formatting in guardrails policy (9ae6dc6)</li> </ul> <p>Generating notes for 1.8.8</p>"},{"location":"changelog/#187-2025-06-24","title":"1.8.7 (2025-06-24)","text":""},{"location":"changelog/#documentation_33","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.8.6 (0b1a8ff)</li> </ul>"},{"location":"changelog/#code-refactoring_2","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>simplify validation checks by removing helper function in guardrails policy (896854b)</li> </ul> <p>Generating notes for 1.8.7</p>"},{"location":"changelog/#186-2025-06-24","title":"1.8.6 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_29","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update provider version constraints in README and improve deny message in extra-guardrails policy (2416770)</li> </ul>"},{"location":"changelog/#documentation_34","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.8.5 (a3cd876)</li> <li>update terraform-docs [skip ci] (20d50f3)</li> </ul>"},{"location":"changelog/#code-refactoring_3","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>improve validation logic and error messages in guardrails policy (3e04d8f)</li> <li>replace message variable with specific deny messages in guardrails policy (b88396e)</li> </ul> <p>Generating notes for 1.8.6</p>"},{"location":"changelog/#185-2025-06-24","title":"1.8.5 (2025-06-24)","text":""},{"location":"changelog/#bug-fixes_30","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add condition to enforce cost estimation limit in extra-guardrails policy (6a734e7)</li> <li>update provider version constraints in README and extra-guardrails policy (1a160eb)</li> </ul>"},{"location":"changelog/#documentation_35","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.8.4 (6735fcb)</li> <li>update terraform-docs [skip ci] (d945ecc)</li> </ul> <p>Generating notes for 1.8.5</p>"},{"location":"changelog/#184-2025-06-23","title":"1.8.4 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_31","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update Terraform version check message format in extra-guardrails policy (0e4d8d0)</li> </ul>"},{"location":"changelog/#documentation_36","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.8.3 (89a392e)</li> <li>update terraform-docs [skip ci] (924be9d)</li> </ul> <p>Generating notes for 1.8.4</p>"},{"location":"changelog/#183-2025-06-23","title":"1.8.3 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_32","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>configure git user for CHANGELOG.md updates in workflow (188aeb9)</li> </ul> <p>Generating notes for 1.8.3</p>"},{"location":"changelog/#182-2025-06-23","title":"1.8.2 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_33","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add permissions for MkDocs build and deploy job (e7999e0)</li> </ul> <p>Generating notes for 1.8.2</p>"},{"location":"changelog/#181-2025-06-23","title":"1.8.1 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_34","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add MKDOCS_GIT_COMMITTERS_APIKEY environment variable for MkDocs build (4bc61d4)</li> </ul> <p>Generating notes for 1.8.1</p>"},{"location":"changelog/#180-2025-06-23","title":"1.8.0 (2025-06-23)","text":""},{"location":"changelog/#features_6","title":"\ud83d\ude80 Features","text":"<ul> <li>add Workflow Refactoring section to documentation navigation (d283e98)</li> </ul> <p>Generating notes for 1.8.0</p>"},{"location":"changelog/#170-2025-06-23","title":"1.7.0 (2025-06-23)","text":""},{"location":"changelog/#features_7","title":"\ud83d\ude80 Features","text":"<ul> <li>update MkDocs installation to include additional plugins (379af2e)</li> </ul> <p>Generating notes for 1.7.0</p>"},{"location":"changelog/#160-2025-06-23","title":"1.6.0 (2025-06-23)","text":""},{"location":"changelog/#features_8","title":"\ud83d\ude80 Features","text":"<ul> <li>enhance MkDocs installation step to include additional plugins (823c6da)</li> </ul> <p>Generating notes for 1.6.0</p>"},{"location":"changelog/#150-2025-06-23","title":"1.5.0 (2025-06-23)","text":""},{"location":"changelog/#features_9","title":"\ud83d\ude80 Features","text":"<ul> <li>add installation steps for OpenTofu and Terraform in CI workflow (ae26a50)</li> <li>add MkDocs build and deploy workflow for documentation (6c20ff5)</li> </ul>"},{"location":"changelog/#bug-fixes_35","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>clean up CHANGELOG.md and improve formatting in documentation (0976105)</li> <li>correct syntax for deny rules in extra-guardrails.rego (1f585a9)</li> <li>update provider versions in README.md for accuracy (af83485)</li> </ul>"},{"location":"changelog/#documentation_37","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.10 (1200e27)</li> </ul>"},{"location":"changelog/#code-refactoring_4","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>reorganize deny rules for clarity and consistency in extra-guardrails.rego (711d951)</li> </ul> <p>Generating notes for 1.5.0</p>"},{"location":"changelog/#1410-2025-06-23","title":"1.4.10 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_36","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance terraform plan command with dynamic variables (3a0fe31)</li> <li>markdown linting issues (a1fbbf3)</li> </ul>"},{"location":"changelog/#documentation_38","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.9 (c7b91b4)</li> <li>update terraform-docs [skip ci] (9334845)</li> </ul> <p>Generating notes for 1.4.10</p>"},{"location":"changelog/#149-2025-06-23","title":"1.4.9 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_37","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update cloudflare/circl dependency to v1.6.1 (a2a94c1)</li> </ul>"},{"location":"changelog/#documentation_39","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.8 (5a70a77)</li> </ul> <p>Generating notes for 1.4.9</p>"},{"location":"changelog/#148-2025-06-23","title":"1.4.8 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_38","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>expand CodeQL analysis to include Python (2dc7f91)</li> </ul>"},{"location":"changelog/#documentation_40","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.7 (dc8b4ac)</li> </ul> <p>Generating notes for 1.4.8</p>"},{"location":"changelog/#147-2025-06-23","title":"1.4.7 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_39","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update mkdocs version range in requirements.txt (e30bd5c)</li> </ul> <p>Generating notes for 1.4.7</p>"},{"location":"changelog/#146-2025-06-23","title":"1.4.6 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_40","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update GitHub and null provider versions in README.md (11897f3)</li> <li>update requirements and improve test scripts for fix_mike_info.py (92dccdc)</li> </ul>"},{"location":"changelog/#documentation_41","title":"\ud83d\udcda Documentation","text":"<ul> <li>deps: bump jinja2 from 3.1.2 to 3.1.6 in /docs (40d89e4)</li> <li>deps: bump mkdocs-material from 9.4.14 to 9.6.14 in /docs (99907a5)</li> <li>deps: bump mkdocs-minify-plugin from 0.7.1 to 0.8.0 in /docs (2673aa0)</li> <li>update changelog for v1.4.5 (aa2e6a1)</li> <li>update terraform-docs [skip ci] (788c3cb)</li> <li>update terraform-docs [skip ci] (03be4ce)</li> <li>update terraform-docs [skip ci] (8cdde00)</li> </ul> <p>Generating notes for 1.4.6</p>"},{"location":"changelog/#145-2025-06-23","title":"1.4.5 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_41","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>correct formatting in release workflow for consistency (c3ac5c3)</li> </ul>"},{"location":"changelog/#documentation_42","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.4 (87479e4)</li> </ul> <p>Generating notes for 1.4.5</p>"},{"location":"changelog/#144-2025-06-23","title":"1.4.4 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_42","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>ensure mkdocs.yml is present by checking out the main branch in release workflow (e986212)</li> </ul>"},{"location":"changelog/#documentation_43","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.3 (71c3678)</li> </ul> <p>Generating notes for 1.4.4</p>"},{"location":"changelog/#143-2025-06-23","title":"1.4.3 (2025-06-23)","text":""},{"location":"changelog/#bug-fixes_43","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>correct script path in verification step (79aabed)</li> </ul>"},{"location":"changelog/#documentation_44","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.2 (8d4b0e2)</li> </ul> <p>Generating notes for 1.4.3</p>"},{"location":"changelog/#142-2025-06-23","title":"1.4.2 (2025-06-23)","text":""},{"location":"changelog/#documentation_45","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.1 (7892d70)</li> </ul>"},{"location":"changelog/#code-refactoring_5","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>remove obsolete fix_mike_info.py script (b4927dc)</li> </ul> <p>Generating notes for 1.4.2</p>"},{"location":"changelog/#141-2025-06-22","title":"1.4.1 (2025-06-22)","text":""},{"location":"changelog/#bug-fixes_44","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>set working directory for script presence check in release workflow (4581404)</li> </ul>"},{"location":"changelog/#documentation_46","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.4.0 (bb48672)</li> </ul> <p>Generating notes for 1.4.1</p>"},{"location":"changelog/#140-2025-06-22","title":"1.4.0 (2025-06-22)","text":""},{"location":"changelog/#features_10","title":"\ud83d\ude80 Features","text":"<ul> <li>add verification step for required scripts before notification (fa78c79)</li> </ul>"},{"location":"changelog/#documentation_47","title":"\ud83d\udcda Documentation","text":"<ul> <li>update changelog for v1.3.0 (1032ebd)</li> </ul> <p>Generating notes for 1.4.0</p>"},{"location":"changelog/#130-2025-06-22","title":"1.3.0 (2025-06-22)","text":""},{"location":"changelog/#features_11","title":"\ud83d\ude80 Features","text":"<ul> <li>add alias conflict check before deploying documentation (64853a2)</li> </ul> <p>Generating notes for 1.3.0</p>"},{"location":"changelog/#120-2025-06-22","title":"1.2.0 (2025-06-22)","text":""},{"location":"changelog/#features_12","title":"\ud83d\ude80 Features","text":"<ul> <li>add deploy_docs script for versioned documentation deployment (b53b425)</li> </ul> <p>Generating notes for 1.2.0</p>"},{"location":"changelog/#1127-2025-06-22","title":"1.1.27 (2025-06-22)","text":""},{"location":"changelog/#bug-fixes_45","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add scripts for release management and MkDocs validation (ad56933)</li> </ul> <p>Generating notes for 1.1.27</p>"},{"location":"changelog/#1126-2025-06-22","title":"1.1.26 (2025-06-22)","text":""},{"location":"changelog/#bug-fixes_46","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add script to clean up Mike configuration and validate workflows (010ce41)</li> </ul> <p>Generating notes for 1.1.26</p>"},{"location":"changelog/#1125-2025-06-20","title":"1.1.25 (2025-06-20)","text":""},{"location":"changelog/#code-refactoring_6","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>streamline dependency installation and mkdocs deployment steps (04f1bc9)</li> </ul> <p>Generating notes for 1.1.25</p>"},{"location":"changelog/#1124-2025-06-20","title":"1.1.24 (2025-06-20)","text":""},{"location":"changelog/#bug-fixes_47","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add debug output for mkdocs.yml location in release workflow (2d52fb2)</li> </ul> <p>Generating notes for 1.1.24</p>"},{"location":"changelog/#1123-2025-06-20","title":"1.1.23 (2025-06-20)","text":""},{"location":"changelog/#bug-fixes_48","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>remove redundant debug step and set working directory for mkdocs.yml check (8d56507)</li> </ul> <p>Generating notes for 1.1.23</p>"},{"location":"changelog/#1122-2025-06-20","title":"1.1.22 (2025-06-20)","text":""},{"location":"changelog/#bug-fixes_49","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add debug step to show working directory and environment variables after checkout (0a2a91f)</li> <li>update debug step name for clarity in release workflow (76e822a)</li> </ul> <p>Generating notes for 1.1.22</p>"},{"location":"changelog/#1121-2025-06-19","title":"1.1.21 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_50","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>simplify mkdocs.yml presence check and remove redundant debug steps (94f0a8d)</li> </ul> <p>Generating notes for 1.1.21</p>"},{"location":"changelog/#1120-2025-06-19","title":"1.1.20 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_51","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance checkout step with additional logging and mkdocs.yml presence verification (9936108)</li> </ul> <p>Generating notes for 1.1.20</p>"},{"location":"changelog/#1119-2025-06-19","title":"1.1.19 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_52","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance checkout step with additional logging and mkdocs.yml presence verification (45edb24)</li> </ul> <p>Generating notes for 1.1.19</p>"},{"location":"changelog/#1118-2025-06-19","title":"1.1.18 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_53","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>enhance checkout step with detailed logging and mkdocs.yml presence check (621aab7)</li> </ul> <p>Generating notes for 1.1.18</p>"},{"location":"changelog/#1117-2025-06-19","title":"1.1.17 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_54","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>ensure clean checkout of main and verify mkdocs.yml presence (2c82513)</li> </ul> <p>Generating notes for 1.1.17</p>"},{"location":"changelog/#1116-2025-06-19","title":"1.1.16 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_55","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>update checkout step to ensure mkdocs.yml is present (7a04e50)</li> </ul> <p>Generating notes for 1.1.16</p>"},{"location":"changelog/#1115-2025-06-19","title":"1.1.15 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_56","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add debug information before MkDocs build to assist troubleshooting (469f2fb)</li> </ul> <p>Generating notes for 1.1.15</p>"},{"location":"changelog/#1114-2025-06-19","title":"1.1.14 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_57","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>ensure fix-mike-aliases script runs without failing the deployment (ca2fcdd)</li> </ul> <p>Generating notes for 1.1.14</p>"},{"location":"changelog/#1113-2025-06-19","title":"1.1.13 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_58","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>improve error handling in deployment scripts and prevent deploying 'latest' as a version (6e87500)</li> </ul> <p>Generating notes for 1.1.13</p>"},{"location":"changelog/#1112-2025-06-19","title":"1.1.12 (2025-06-19)","text":""},{"location":"changelog/#bug-fixes_59","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>standardize token parameter name in workflows and enhance mike alias conflict resolution (904b16a)</li> </ul> <p>Generating notes for 1.1.12</p>"},{"location":"changelog/#changelog_1","title":"Changelog","text":""},{"location":"changelog/#1111-2025-06-18","title":"1.1.11 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-1111","title":"\ud83d\udc1b Bug Fixes (1.1.11)","text":"<ul> <li>enhance MkDocs deployment process and resolve Mike alias conflicts (66c4e3a)</li> </ul> <p>Generating notes for 1.1.11</p>"},{"location":"changelog/#1110-2025-06-18","title":"1.1.10 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-1110","title":"\ud83d\udc1b Bug Fixes (1.1.10)","text":"<ul> <li>remove unsupported --no-redirect flag from mike commands (2bd99d9)</li> </ul> <p>Generating notes for 1.1.10</p>"},{"location":"changelog/#119-2025-06-18","title":"1.1.9 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-119","title":"\ud83d\udc1b Bug Fixes (1.1.9)","text":"<ul> <li>resolve mike alias collision error between version name and alias (407ae87)</li> </ul> <p>Generating notes for 1.1.9</p>"},{"location":"changelog/#118-2025-06-18","title":"1.1.8 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-118","title":"\ud83d\udc1b Bug Fixes (1.1.8)","text":"<ul> <li>update TFLint action to use terraform-linters/setup-tflint@v4.1.1 (dc55f5f)</li> </ul> <p>Generating notes for 1.1.8</p>"},{"location":"changelog/#117-2025-06-18","title":"1.1.7 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-117","title":"\ud83d\udc1b Bug Fixes (1.1.7)","text":"<ul> <li>resolve docs-update job failures by addressing SSL module and mike alias collision issues (72ccd07)</li> </ul>"},{"location":"changelog/#documentation-117","title":"\ud83d\udcda Documentation (1.1.7)","text":"<ul> <li>add documentation for docs-update job fixes (dfd5557)</li> </ul> <p>Generating notes for 1.1.7</p>"},{"location":"changelog/#116-2025-06-18","title":"1.1.6 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-116","title":"\ud83d\udc1b Bug Fixes (1.1.6)","text":"<ul> <li>resolve workflow validation errors in build.yml (3793b9f)</li> </ul> <p>Generating notes for 1.1.6</p>"},{"location":"changelog/#115-2025-06-18","title":"1.1.5 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-115","title":"\ud83d\udc1b Bug Fixes (1.1.5)","text":"<ul> <li>make GitHub token optional in reusable workflows (8c3c99a)</li> </ul> <p>Generating notes for 1.1.5</p>"},{"location":"changelog/#114-2025-06-18","title":"1.1.4 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-114","title":"\ud83d\udc1b Bug Fixes (1.1.4)","text":"<ul> <li>standardize GITHUB_TOKEN parameter name in reusable workflows (b7f7cda)</li> </ul> <p>Generating notes for 1.1.4</p>"},{"location":"changelog/#113-2025-06-18","title":"1.1.3 (2025-06-18)","text":""},{"location":"changelog/#code-refactoring-113","title":"\u267b\ufe0f Code Refactoring (1.1.3)","text":"<ul> <li>standardize GitHub Actions workflows using reusable workflows for validation, security, and docs (ffd645c)</li> </ul> <p>Generating notes for 1.1.3</p>"},{"location":"changelog/#112-2025-06-18","title":"1.1.2 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-112","title":"\ud83d\udc1b Bug Fixes (1.1.2)","text":"<ul> <li>streamline Git configuration and deployment process in documentation workflow (bcf66ff)</li> </ul>"},{"location":"changelog/#documentation-112","title":"\ud83d\udcda Documentation (1.1.2)","text":"<ul> <li>update changelog for v1.1.1 (f230070)</li> </ul> <p>Generating notes for 1.1.2</p>"},{"location":"changelog/#111-2025-06-18","title":"1.1.1 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-111","title":"\ud83d\udc1b Bug Fixes (1.1.1)","text":"<ul> <li>refine permissions and enhance deployment process in GitHub Actions (34efcad)</li> </ul>"},{"location":"changelog/#documentation-111","title":"\ud83d\udcda Documentation (1.1.1)","text":"<ul> <li>update changelog for v1.1.0 (2884765)</li> </ul> <p>Generating notes for 1.1.1</p>"},{"location":"changelog/#110-2025-06-18","title":"1.1.0 (2025-06-18)","text":""},{"location":"changelog/#features-110","title":"\ud83d\ude80 Features (1.1.0)","text":"<ul> <li>enhance security and cleanup in CI workflows, add credential management guidelines (7ad7806)</li> </ul>"},{"location":"changelog/#documentation-110","title":"\ud83d\udcda Documentation (1.1.0)","text":"<ul> <li>update changelog for v1.0.17 (14bb6d3)</li> </ul> <p>Generating notes for 1.1.0</p>"},{"location":"changelog/#1017-2025-06-18","title":"1.0.17 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-1017","title":"\ud83d\udc1b Bug Fixes (1.0.17)","text":"<ul> <li>add required permissions to build-and-deploy-docs job (8cb07f9)</li> </ul>"},{"location":"changelog/#documentation-1017","title":"\ud83d\udcda Documentation (1.0.17)","text":"<ul> <li>update changelog for v1.0.16 (c15deaf)</li> </ul> <p>Generating notes for 1.0.17</p>"},{"location":"changelog/#1016-2025-06-18","title":"1.0.16 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-1016","title":"\ud83d\udc1b Bug Fixes (1.0.16)","text":"<ul> <li>update GitHub Pages deployment permissions (5f62ddc)</li> </ul>"},{"location":"changelog/#documentation-1016","title":"\ud83d\udcda Documentation (1.0.16)","text":"<ul> <li>update changelog for v1.0.15 (6ddc6d4)</li> </ul> <p>Generating notes for 1.0.16</p>"},{"location":"changelog/#1015-2025-06-18","title":"1.0.15 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-1015","title":"\ud83d\udc1b Bug Fixes (1.0.15)","text":"<ul> <li>add fetch-depth:0 to docs checkout in release workflow (8636b36)</li> </ul>"},{"location":"changelog/#documentation-1015","title":"\ud83d\udcda Documentation (1.0.15)","text":"<ul> <li>update changelog for v1.0.14 (6fb7298)</li> </ul> <p>Generating notes for 1.0.15</p>"},{"location":"changelog/#1014-2025-06-18","title":"1.0.14 (2025-06-18)","text":""},{"location":"changelog/#bug-fixes-1014","title":"\ud83d\udc1b Bug Fixes (1.0.14)","text":"<ul> <li>resolve git-committers authentication and gh-pages branch conflicts (e9c7ea1)</li> </ul>"},{"location":"changelog/#documentation-1014","title":"\ud83d\udcda Documentation (1.0.14)","text":"<ul> <li>fix MkDocs strict mode issues and add missing documentation files (5178769)</li> <li>update changelog for v1.0.13 (6b18a34)</li> </ul> <p>Generating notes for 1.0.14</p>"},{"location":"changelog/#1013-2025-06-17","title":"1.0.13 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-1013","title":"\ud83d\udc1b Bug Fixes (1.0.13)","text":"<ul> <li>correct emoji extension paths in MkDocs configuration (eb62851)</li> </ul> <p>Generating notes for 1.0.13</p>"},{"location":"changelog/#1012-2025-06-17","title":"1.0.12 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-1012","title":"\ud83d\udc1b Bug Fixes (1.0.12)","text":"<ul> <li>update MkDocs dependencies and improve documentation build process (ab17abc)</li> </ul> <p>Generating notes for 1.0.12</p>"},{"location":"changelog/#1011-2025-06-17","title":"1.0.11 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-1011","title":"\ud83d\udc1b Bug Fixes (1.0.11)","text":"<ul> <li>update documentation dependencies and improve build output (136f56f)</li> </ul> <p>Generating notes for 1.0.11</p>"},{"location":"changelog/#1010-2025-06-17","title":"1.0.10 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-1010","title":"\ud83d\udc1b Bug Fixes (1.0.10)","text":"<ul> <li>update permissions and enhance documentation deployment process (7b37bfe)</li> </ul> <p>Generating notes for 1.0.10</p>"},{"location":"changelog/#109-2025-06-17","title":"1.0.9 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-109","title":"\ud83d\udc1b Bug Fixes (1.0.9)","text":"<ul> <li>add permissions for discussions in terraform-registry and notify jobs (d9af872)</li> </ul> <p>Generating notes for 1.0.9</p>"},{"location":"changelog/#108-2025-06-17","title":"1.0.8 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-108","title":"\ud83d\udc1b Bug Fixes (1.0.8)","text":"<ul> <li>enhance release comment handling by using discussion URL or creating a new issue (a5e94f6)</li> </ul> <p>Generating notes for 1.0.8</p>"},{"location":"changelog/#107-2025-06-17","title":"1.0.7 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-107","title":"\ud83d\udc1b Bug Fixes (1.0.7)","text":"<ul> <li>update GitHub API call to create release comment for improved functionality (a5770fa)</li> </ul> <p>Generating notes for 1.0.7</p>"},{"location":"changelog/#106-2025-06-17","title":"1.0.6 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-106","title":"\ud83d\udc1b Bug Fixes (1.0.6)","text":"<ul> <li>add GitHub token to Terraform plan steps for enhanced security (51a53e3)</li> </ul> <p>Generating notes for 1.0.6</p>"},{"location":"changelog/#105-2025-06-17","title":"1.0.5 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-105","title":"\ud83d\udc1b Bug Fixes (1.0.5)","text":"<ul> <li>refactor issue fetching logic in traceability workflow for improved error handling (dd9c35c)</li> <li>remove custom_dir from theme configuration in mkdocs.yml (9be77af)</li> </ul> <p>Generating notes for 1.0.5</p>"},{"location":"changelog/#104-2025-06-17","title":"1.0.4 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-104","title":"\ud83d\udc1b Bug Fixes (1.0.4)","text":"<ul> <li>implement code changes to enhance functionality and improve performance (c74db8b)</li> </ul> <p>Generating notes for 1.0.4</p>"},{"location":"changelog/#103-2025-06-17","title":"1.0.3 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-103","title":"\ud83d\udc1b Bug Fixes (1.0.3)","text":"<ul> <li>update Go version and SonarCloud action, refactor E2E tests for better structure (1bc2c1b)</li> </ul> <p>Generating notes for 1.0.3</p>"},{"location":"changelog/#102-2025-06-17","title":"1.0.2 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-102","title":"\ud83d\udc1b Bug Fixes (1.0.2)","text":"<ul> <li>update Terraform provider versions in SonarCloud configuration (7f6b0ee)</li> </ul> <p>Generating notes for 1.0.2</p>"},{"location":"changelog/#101-2025-06-17","title":"1.0.1 (2025-06-17)","text":""},{"location":"changelog/#bug-fixes-101","title":"\ud83d\udc1b Bug Fixes (1.0.1)","text":"<ul> <li>add check for changes before committing coverage report to wiki (d97aaec)</li> </ul> <p>Generating notes for 1.0.1</p>"},{"location":"changelog/#100-2025-06-17","title":"1.0.0 (2025-06-17)","text":""},{"location":"changelog/#features-100","title":"\ud83d\ude80 Features (1.0.0)","text":"<ul> <li>add .gitignore template and languages variable with validation (4c8b169)</li> <li>add backend configuration section to README (1e73419)</li> <li>add bootstrap, CI, GitFlow, security modules and workflows for coverage and documentation (a67874e)</li> <li>add branch naming enforcement and related workflow (48d6697)</li> <li>add bug report and pull request templates for issue tracking (9839842)</li> <li>add CHANGELOG and semantic-release configuration (7d6d553)</li> <li>add CI and release workflows with corresponding templates (67a1221)</li> <li>add CI enforcement workflow to ensure issue integration, documentation, and test changes (d6d67c6)</li> <li>add CI workflow for Terraform validation, linting, and security; update README and Taskfile for doc automation (6c7908c)</li> <li>add CODEOWNERS support and related template for GitHub repository module (651f5b5)</li> <li>add CodeQL analysis configuration and integration tests with RSpec (0359402)</li> <li>add CodeQL configuration and workflow support for multiple languages (046d486)</li> <li>add CodeQL security analysis configuration and custom queries for Go (95ffa17)</li> <li>add coverage workflow and variables for test coverage reporting (4d29f84)</li> <li>add coverage workflows and update README for coverage integration (99fb858)</li> <li>add Dependabot configuration and enablement variable (79b2acf)</li> <li>add Dependabot configuration and management scripts for automated dependency updates (d93a2ef)</li> <li>add disable_actions_until_provisioning variable and update resource counts to manage workflow execution (644fd3f)</li> <li>add drift detection to CI workflow and implement ci-check-drift script (55e4143)</li> <li>add enforcement for semantic PR titles via GitHub Actions (9f4fe12)</li> <li>add example usage section to README template for better guidance (9034373)</li> <li>add examples, inputs, and outputs sections to README (95c0f91)</li> <li>add GitHub Actions workflow for Go test coverage (046f008)</li> <li>add GitHub Actions workflow to automatically update Terraform documentation (2668538)</li> <li>add GitHub Actions workflow to push coverage reports to wiki (2ff28a5)</li> <li>add GitHub project board integration with auto-linking for issues and PRs (e78aee7)</li> <li>add GitHub repository module with enhanced variables and outputs (968b799)</li> <li>add GitHub token and owner variables, implement provisioning wait for Actions permissions (e67ff93)</li> <li>add GitHub workflows for scorecard analysis and stale issue management (5d5f87e)</li> <li>add go.mod file for module management and dependency tracking (0c2f8f8)</li> <li>add initial test specifications for simple and integration tests (e8b3716)</li> <li>add issue and pull request templates, and auto-labeling workflows (dd4a770)</li> <li>add license variable with validation and update module configuration in main.tf (97c82ea)</li> <li>add minimal GitHub repository module example with backend and outputs (117b1bf)</li> <li>add module metadata and comprehensive documentation for GitHub repository management (b495b61)</li> <li>add Node.js setup and markdown linting to CI workflow (f5bce13)</li> <li>add pre-commit hook for Terraform linting and security checks; configure tflint and tfsec tasks in Taskfile (faa8c46)</li> <li>add README template and resource for GitHub repository module (829e609)</li> <li>add release branches and status check contexts variables for GitFlow (209c8ca)</li> <li>add repository initialization variables for GitHub configuration (5d11d53)</li> <li>add SECURITY.md template and security_contact variable for GitHub repository module (5a43163)</li> <li>add SonarCloud configuration and update CI workflow for analysis (cd954bb)</li> <li>add template rendering tests for Dependabot, CodeQL, and CI enforcement workflows (458a64c)</li> <li>add Terraform module for GitHub repository management with templates and workflows (d11848f)</li> <li>add Terratest job to CI workflow for testing infrastructure (a31f0ed)</li> <li>add test workflows for Go, Python, JavaScript, and TypeScript with matrix support (e4ae2c7)</li> <li>add traceability enforcement workflow and related templates (ae304d8)</li> <li>add validation for CODEOWNERS variable to ensure at least one owner is provided (7f6d65b)</li> <li>added CONTIBUTING .editorconfig and .nvmrc templates (d4e0804)</li> <li>enhance GitFlow module with detailed variable descriptions for better clarity (351d9c9)</li> <li>enhance GitHub repository module with CODEOWNERS support and CI improvements (e05f925)</li> <li>enhance GitHub repository module with improved Actions management and new variables (5d63209)</li> <li>enhance GitHub repository module with security features and auto-merge for Dependabot PRs (e6af657)</li> <li>enhance outputs with additional repository details and branch protection configurations (eeb7c45)</li> <li>enhance README template with CI, release, and weekly reporting badges (be9be1a)</li> <li>enhance release management with semantic release configuration (d5169a2)</li> <li>enhance security module with CodeQL and Dependabot configurations (727cbd5)</li> <li>implement OPA guardrails and compliance checks in CI, enhance README with policy details (c678bc4)</li> <li>implement Terraform state management helpers and clean up test cases (7cada52)</li> <li>migrate from tfsec to Trivy for enhanced security scanning and reporting (d1087c2)</li> <li>semantic-release setup with commitlint and Husky for automated versioning/changelog management (a6c87d6)</li> <li>update CI workflow to use matrix for Terraform versions; add SECURITY.md for vuln reporting and sec features (2a01cc7)</li> <li>update default status check contexts for improved clarity and coverage (ee29f89)</li> <li>update dependabot to support language selection (6bf70cd)</li> <li>update GitHub repository configuration and add integration tests (f8f6d03)</li> <li>update main.tf to include GitHub token and owner variables for API access (f8fe760)</li> <li>update validation test to use terraform plan and enhance error handling for missing owners variable (be27b23)</li> </ul>"},{"location":"changelog/#bug-fixes_60","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>add custom security queries to CodeQL configuration (39a84be)</li> <li>add GitHub owner and repository name as environment variables for Terraform plan and validation (0535e8d)</li> <li>add Terraform setup step and refine Go test command in CI workflow (70ce56b)</li> <li>all required variables are now declared and deprected output removed (5886ba0)</li> <li>clean up of old files and path fix (88c42ca)</li> <li>correct markdown formatting in release automation guide and security hardening documentation (ba7adec)</li> <li>correct syntax for cloning wiki repository in coverage workflow (f98ea3a)</li> <li>enable GitHub Pages setup and standardize environment name (343b2ff)</li> <li>enable Go modules and download dependencies in CI workflows (b83175a)</li> <li>enhance README with structured navigation table for better usability (aaaa5e8)</li> <li>enhance SonarCloud integration by setting environment variable and updating scan action (5fb80ef)</li> <li>refine Go test command to run only template rendering tests without external dependencies (b7dbdd3)</li> <li>remove debug environment step from CI workflow to streamline process (6d8b2dd)</li> <li>remove deprecated outputs and clean up workflow file references (99a9ba5)</li> <li>remove npm cache option from Node.js setup in workflows (d8eba74)</li> <li>remove redundant 'go mod download' step from test workflows (96bd419)</li> <li>remove reviewer assignments from Dependabot configuration (a53b282)</li> <li>reorganize README for improved clarity and structure (fec1c5b)</li> <li>replace 'go mod download' with 'go mod tidy' in CI workflows for improved dependency management (4a4a102)</li> <li>restrict CodeQL analysis to Go only for Terraform module (abcd025)</li> <li>set working directory for Go commands in CI workflows (a0e6cd8)</li> <li>specify test directory for coverage report generation (7fad088)</li> <li>update build workflow to use Go instead of Python for testing (cc32401)</li> <li>update checkout action version and add debug environment step in CI workflow (3adfe1e)</li> <li>update GitHub Actions workflows and dependencies for improved functionality (78c2800)</li> <li>update GitHub provider source and version constraints in Terraform configuration (1e068a5)</li> <li>update GitHub workflows and templates for consistency and functionality (b5aa359)</li> <li>update Go test command to include all packages in the workspace (5935c68)</li> <li>update Go test command to specify test directory (17c788b)</li> <li>update Go test commands to target specific test files (544abd8)</li> <li>update Go test commands to target test directory instead of specific files (82680df)</li> <li>update Go version specification in workflows and add working directory context (20a4223)</li> <li>update README to clarify disable_actions_until_provisioning variable description and improve formatting in main.tf (f824ec5)</li> <li>update README to include null provider requirement and remove outputs section (8003426)</li> <li>update SonarCloud action version in CI workflow for consistency (232a70e)</li> <li>update SonarCloud project key for correct repository identification (3015d8b)</li> </ul>"},{"location":"changelog/#code-refactoring_7","title":"\u267b\ufe0f Code Refactoring","text":"<ul> <li>remove outdated test workflows for Go and language-specific templates (a3993e8)</li> <li>streamline README structure. Esentially stopped mixing up this and template. I'm an idiot (a652c79)</li> <li>update GitHub workflows to use escaped GitHub token syntax &amp; improve variable descriptions (c1bc946)</li> </ul> <p>Generating notes for 1.0.0</p>"},{"location":"changelog/#110-2025-06-05","title":"[1.1.0] - 2025-06-05","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Refactored <code>variables.tf</code> and <code>outputs.tf</code> for clarity, registry readiness, and added <code>try(...)</code> error handling</li> <li>Taskfile <code>docs</code> task and Husky pre-commit hook to auto-inject Terraform docs via <code>terraform-docs</code></li> <li>Complete <code>examples/minimal</code> with local backend config, variables, and outputs</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Updated <code>README.md</code> for Terraform Registry conventions and integrated <code>terraform-docs</code> injection</li> <li><code>.terraform-docs.yml</code> fixed to use proper map format for <code>sections</code></li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Removed unsupported output attributes (<code>.html_url</code>/<code>.url</code>)</li> <li>Disabled TFLint unused declarations rule to avoid false positives</li> </ul>"},{"location":"changelog/#maintenance","title":"Maintenance","text":"<ul> <li>Increased commitlint header length limit to 120 characters</li> <li>Tagged and published versions v1.0.0 and v1.1.0</li> </ul>"},{"location":"api/data-sources/","title":"API Reference - Data Sources","text":"<p>This page documents all data sources used by the module.</p> <p>Data Sources vs Resources</p> <p>Data sources are used to fetch information about existing resources, while resources create new infrastructure.</p>"},{"location":"api/data-sources/#github_repository","title":"github_repository","text":"<p>Used to fetch information about existing repositories for validation or reference.</p> <pre><code>data \"github_repository\" \"existing\" {\n  name = \"existing-repo\"\n}\n</code></pre>"},{"location":"api/data-sources/#github_organization","title":"github_organization","text":"<p>Used to fetch organization information for team and permission management.</p> <pre><code>data \"github_organization\" \"org\" {\n  name = var.github_owner\n}\n</code></pre>"},{"location":"api/data-sources/#github_team","title":"github_team","text":"<p>Used to validate team references in CODEOWNERS and permissions.</p> <pre><code>data \"github_team\" \"security\" {\n  slug = \"security-team\"\n}\n</code></pre>"},{"location":"api/data-sources/#github_branch","title":"github_branch","text":"<p>Used to fetch information about existing branches for protection rules.</p> <pre><code>data \"github_branch\" \"main\" {\n  repository = github_repository.this.name\n  branch     = \"main\"\n}\n</code></pre>"},{"location":"api/data-sources/#template-data-sources","title":"Template Data Sources","text":"<p>The module uses several <code>template_file</code> data sources for generating configuration files:</p> <ul> <li>Workflow Templates: CI/CD, security scanning, and automation workflows</li> <li>Configuration Templates: Dependabot, CodeQL, and policy configurations  </li> <li>Documentation Templates: README, CONTRIBUTING, and SECURITY files</li> <li>Issue Templates: Bug reports, feature requests, and security issues</li> </ul> <p>These templates are dynamically populated based on the module's input variables and repository configuration.</p>"},{"location":"api/inputs/","title":"Input Variables","text":"<p>This page documents all input variables that can be provided to the Terraform GitHub Repository module.</p>"},{"location":"api/inputs/#required-inputs","title":"Required Inputs","text":"Name Description Type Default Required name Name of the repository <code>string</code> n/a yes"},{"location":"api/inputs/#optional-inputs","title":"Optional Inputs","text":"Name Description Type Default Required description Description of the repository <code>string</code> <code>\"\"</code> no visibility Visibility of the repository: public or private <code>string</code> <code>\"private\"</code> no auto_init Set to true to initialize the repository with a README <code>bool</code> <code>false</code> no topics List of topics to add to the repository <code>list(string)</code> <code>[]</code> no issue_labels Custom issue labels to add to the repository <code>map(object({ name = string, color = string, description = string }))</code> <code>{}</code> no has_issues Set to true to enable issues in the repository <code>bool</code> <code>true</code> no has_projects Set to true to enable projects in the repository <code>bool</code> <code>false</code> no has_wiki Set to true to enable wiki in the repository <code>bool</code> <code>false</code> no has_discussions Set to true to enable discussions in the repository <code>bool</code> <code>false</code> no delete_branch_on_merge Set to true to automatically delete head branches after merge <code>bool</code> <code>true</code> no archive_on_destroy Set to true to archive the repository on destroy <code>bool</code> <code>false</code> no vulnerability_alerts Set to true to enable vulnerability alerts <code>bool</code> <code>true</code> no secret_scanning Set to true to enable secret scanning <code>bool</code> <code>true</code> no advanced_security Set to true to enable advanced security if available <code>bool</code> <code>false</code> no branch_protection Branch protection rules <code>map(object({ ... }))</code> <code>{}</code> no collaborators List of collaborators to add to the repository <code>list(object({ username = string, permission = string }))</code> <code>[]</code> no teams List of teams to give access to the repository <code>list(object({ name = string, permission = string }))</code> <code>[]</code> no files Map of files to create in the repository <code>map(object({ content = string }))</code> <code>{}</code> no webhooks List of webhooks to add to the repository <code>list(object({ url = string, ... }))</code> <code>[]</code> no template Template repository to use <code>object({ owner = string, repository = string })</code> <code>null</code> no license_template License template to use <code>string</code> <code>null</code> no gitignore_template Gitignore template to use <code>string</code> <code>null</code> no"},{"location":"api/inputs/#branch-protection-variables","title":"Branch Protection Variables","text":"<p>The <code>branch_protection</code> variable accepts the following parameters:</p> <pre><code>branch_protection = {\n  main = {\n    required_reviews           = number\n    required_checks            = list(string)\n    dismiss_stale_reviews      = bool\n    require_code_owner_reviews = bool\n    require_signed_commits     = bool\n    enforce_admins             = bool\n    require_up_to_date_branches = bool\n  }\n}\n</code></pre>"},{"location":"api/inputs/#webhook-variables","title":"Webhook Variables","text":"<p>The <code>webhooks</code> variable accepts the following parameters:</p> <pre><code>webhooks = [\n  {\n    url          = string\n    content_type = string\n    events       = list(string)\n    active       = bool\n    secret       = string (optional)\n  }\n]\n</code></pre> <p>For more detailed information about each variable, see the source code or the module's README.</p>"},{"location":"api/outputs/","title":"Output Values","text":"<p>This page documents all output values that are exported by the Terraform GitHub Repository module.</p>"},{"location":"api/outputs/#repository-information","title":"Repository Information","text":"Name Description Type repository_id The ID of the repository <code>string</code> repository_name The name of the repository <code>string</code> repository_full_name The full name of the repository (owner/name) <code>string</code> repository_html_url The HTML URL of the repository <code>string</code> repository_ssh_clone_url The SSH clone URL of the repository <code>string</code> repository_http_clone_url The HTTPS clone URL of the repository <code>string</code> repository_git_clone_url The Git clone URL of the repository <code>string</code> repository_node_id The Node ID of the repository <code>string</code>"},{"location":"api/outputs/#branch-information","title":"Branch Information","text":"Name Description Type default_branch The default branch of the repository <code>string</code> protected_branches Map of branch names to protection rule details <code>map(any)</code>"},{"location":"api/outputs/#access-information","title":"Access Information","text":"Name Description Type collaborators List of collaborators with their permissions <code>list(map(string))</code> team_permissions List of teams with their permissions <code>list(map(string))</code>"},{"location":"api/outputs/#webhook-information","title":"Webhook Information","text":"Name Description Type webhook_urls List of webhook URLs configured for the repository <code>list(string)</code> webhook_ids Map of webhook URLs to their IDs <code>map(string)</code>"},{"location":"api/outputs/#usage-example","title":"Usage Example","text":"<pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"example-repo\"\n  description = \"Example repository\"\n}\n\noutput \"repo_url\" {\n  value = module.github_repo.repository_html_url\n}\n\noutput \"clone_command\" {\n  value = \"git clone ${module.github_repo.repository_ssh_clone_url}\"\n}\n</code></pre> <p>For more detailed information about each output, see the source code or the module's README.</p>"},{"location":"api/resources/","title":"Resources","text":"<p>This page documents all Terraform resources created by the Terraform GitHub Repository module.</p>"},{"location":"api/resources/#core-resources","title":"Core Resources","text":"Resource Type Purpose <code>github_repository</code> Creates the GitHub repository <code>github_branch</code> Creates additional branches if specified <code>github_branch_default</code> Sets the default branch"},{"location":"api/resources/#protection-resources","title":"Protection Resources","text":"Resource Type Purpose <code>github_branch_protection</code> Applies branch protection rules <code>github_branch_protection_v3</code> Applied for older GitHub Enterprise instances"},{"location":"api/resources/#access-resources","title":"Access Resources","text":"Resource Type Purpose <code>github_repository_collaborator</code> Adds collaborators to the repository <code>github_team_repository</code> Adds team access to the repository"},{"location":"api/resources/#configuration-resources","title":"Configuration Resources","text":"Resource Type Purpose <code>github_repository_file</code> Creates files in the repository <code>github_repository_webhook</code> Creates webhooks for the repository <code>github_repository_deploy_key</code> Adds deploy keys to the repository <code>github_issue_label</code> Creates custom issue labels"},{"location":"api/resources/#security-resources","title":"Security Resources","text":"Resource Type Purpose <code>github_repository_vulnerability_alerts</code> Enables vulnerability alerts <code>github_repository_code_scanning_security</code> Enables code scanning (if available) <code>github_repository_secret_scanning</code> Enables secret scanning"},{"location":"api/resources/#resource-dependency-graph","title":"Resource Dependency Graph","text":"<pre><code>github_repository\n\u251c\u2500\u2500 github_branch\n\u251c\u2500\u2500 github_branch_default\n\u251c\u2500\u2500 github_branch_protection\n\u251c\u2500\u2500 github_repository_collaborator\n\u251c\u2500\u2500 github_team_repository\n\u251c\u2500\u2500 github_repository_file\n\u251c\u2500\u2500 github_repository_webhook\n\u251c\u2500\u2500 github_repository_deploy_key\n\u251c\u2500\u2500 github_issue_label\n\u251c\u2500\u2500 github_repository_vulnerability_alerts\n\u251c\u2500\u2500 github_repository_code_scanning_security\n\u2514\u2500\u2500 github_repository_secret_scanning\n</code></pre>"},{"location":"api/resources/#resource-configuration","title":"Resource Configuration","text":"<p>Most resources in this module are created conditionally based on the provided input variables. For example, branch protection rules are only created if the <code>branch_protection</code> variable is provided.</p> <p>For more detailed information about each resource and its configuration, see the source code or the module's README.</p>"},{"location":"development/CODE_OF_CONDUCT/","title":"Code of Conduct","text":""},{"location":"development/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"development/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"development/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Project maintainers are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"development/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces.</p>"},{"location":"development/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the project maintainers. All complaints will be reviewed and investigated promptly and fairly.</p>"},{"location":"development/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p>"},{"location":"development/architecture/","title":"Architecture","text":"<p>This document outlines the architecture of the Terraform GitHub Repository module, explaining its design principles, components, and implementation details.</p>"},{"location":"development/architecture/#overall-architecture","title":"Overall Architecture","text":"<p>The Terraform GitHub Repository module follows a modular design with clear separation of concerns:</p> <pre><code>terraform-github-repo/\n\u251c\u2500\u2500 main.tf           # Main repository resource and core functionality\n\u251c\u2500\u2500 variables.tf      # Input variables definitions\n\u251c\u2500\u2500 outputs.tf        # Output values\n\u251c\u2500\u2500 versions.tf       # Provider and Terraform version constraints\n\u251c\u2500\u2500 branch.tf         # Branch and branch protection resources\n\u251c\u2500\u2500 security.tf       # Security features (vulnerability alerts, etc.)\n\u251c\u2500\u2500 webhooks.tf       # Webhook configuration\n\u251c\u2500\u2500 files.tf          # File creation and management\n\u251c\u2500\u2500 access.tf         # Collaborator and team access management\n\u2514\u2500\u2500 labels.tf         # Issue label management\n</code></pre>"},{"location":"development/architecture/#core-components","title":"Core Components","text":""},{"location":"development/architecture/#1-repository-creation","title":"1. Repository Creation","text":"<p>The base repository resource is defined in <code>main.tf</code>, which handles:</p> <ul> <li>Creating the repository</li> <li>Configuring basic settings (visibility, description, etc.)</li> <li>Setting up repository features (issues, wiki, etc.)</li> </ul>"},{"location":"development/architecture/#2-branch-management","title":"2. Branch Management","text":"<p>Branch-related resources are managed in <code>branch.tf</code>, including:</p> <ul> <li>Creating additional branches</li> <li>Setting the default branch</li> <li>Configuring branch protection rules</li> </ul>"},{"location":"development/architecture/#3-security-features","title":"3. Security Features","text":"<p>Security features are implemented in <code>security.tf</code>:</p> <ul> <li>Vulnerability alerts</li> <li>Secret scanning</li> <li>Advanced security features (CodeQL, etc.)</li> </ul>"},{"location":"development/architecture/#4-access-control","title":"4. Access Control","text":"<p>Access control is managed in <code>access.tf</code>:</p> <ul> <li>Collaborator management</li> <li>Team access and permissions</li> </ul>"},{"location":"development/architecture/#5-content-management","title":"5. Content Management","text":"<p>Repository content is handled in <code>files.tf</code>:</p> <ul> <li>Creating files from templates or string content</li> <li>Managing standard files (README, LICENSE, etc.)</li> <li>Creating .gitignore and other configuration files</li> </ul>"},{"location":"development/architecture/#design-principles","title":"Design Principles","text":"<ol> <li>Modularity: Each component is isolated for easier maintenance</li> <li>Extensibility: Features can be enabled/disabled independently</li> <li>Sensible defaults: Secure defaults with optional overrides</li> <li>Idempotence: Safe to apply multiple times without side effects</li> <li>Clean API: Well-documented variables with clear purposes</li> </ol>"},{"location":"development/architecture/#implementation-details","title":"Implementation Details","text":""},{"location":"development/architecture/#resource-dependencies","title":"Resource Dependencies","text":"<p>The module carefully manages resource dependencies to ensure proper creation order. For example:</p> <ul> <li>Repository must exist before branches can be created</li> <li>Branches must exist before protection rules can be applied</li> </ul>"},{"location":"development/architecture/#conditional-creation","title":"Conditional Creation","text":"<p>Most resources are conditionally created based on input variables:</p> <ul> <li>Branch protection is only applied if branch_protection variable is provided</li> <li>Files are only created if specified in the files variable</li> </ul>"},{"location":"development/architecture/#error-handling","title":"Error Handling","text":"<p>The module includes logic to handle:</p> <ul> <li>Repository initialization (auto_init vs template vs empty)</li> <li>API limitations and retries</li> <li>Proper resource deletion and cleanup</li> </ul>"},{"location":"development/architecture/#extension-points","title":"Extension Points","text":"<p>The module can be extended through:</p> <ol> <li>Template repositories</li> <li>Custom file content</li> <li>Webhook integrations</li> <li>Team and collaborator access patterns</li> </ol>"},{"location":"development/architecture/#future-architecture-enhancements","title":"Future Architecture Enhancements","text":"<p>Planned architectural improvements include:</p> <ol> <li>Submodules for specialized use cases</li> <li>Enhanced templating capabilities</li> <li>Better integration with GitHub Apps</li> <li>Support for GitHub Enterprise Server</li> </ol>"},{"location":"development/contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to the Terraform GitHub Repository module! This guide will help you understand how to contribute to this project.</p>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":"<ol> <li>Fork the repository</li> <li>Clone your fork:</li> </ol> <pre><code>git clone https://github.com/your-username/terraform-github-repo.git\ncd terraform-github-repo\n</code></pre>"},{"location":"development/contributing/#development-requirements","title":"Development Requirements","text":"<ul> <li>Terraform (v1.0.0+)</li> <li>Go (v1.18+) for tests</li> <li>pre-commit for linting and formatting</li> </ul>"},{"location":"development/contributing/#setting-up-the-development-environment","title":"Setting Up the Development Environment","text":"<ol> <li>Install pre-commit hooks:</li> </ol> <pre><code>pre-commit install\n</code></pre> <ol> <li>Install Go dependencies:</li> </ol> <pre><code>go mod download\n</code></pre>"},{"location":"development/contributing/#testing","title":"Testing","text":""},{"location":"development/contributing/#unit-tests","title":"Unit Tests","text":"<p>Run the unit tests:</p> <pre><code>go test -v ./test\n</code></pre>"},{"location":"development/contributing/#integration-tests","title":"Integration Tests","text":"<p>To run integration tests, set up the required environment variables:</p> <pre><code>export GITHUB_TOKEN=your_github_token\nexport GITHUB_OWNER=your_github_username_or_organization\ngo test -v -tags=integration ./test\n</code></pre>"},{"location":"development/contributing/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Create a new branch for your feature or bugfix:</li> </ol> <pre><code>git checkout -b feature/your-feature-name\n</code></pre> <ol> <li>Make your changes and commit them using conventional commits:</li> </ol> <pre><code>git commit -m \"feat: add new feature\"\n</code></pre> <ol> <li>Push your branch:</li> </ol> <pre><code>git push origin feature/your-feature-name\n</code></pre> <ol> <li>Create a pull request to the <code>main</code> branch of the original repository</li> </ol>"},{"location":"development/contributing/#conventional-commits","title":"Conventional Commits","text":"<p>This project uses Conventional Commits for commit messages. Please follow this format:</p> <ul> <li><code>feat:</code> for new features</li> <li><code>fix:</code> for bug fixes</li> <li><code>docs:</code> for documentation updates</li> <li><code>test:</code> for test additions or updates</li> <li><code>refactor:</code> for code refactoring</li> <li><code>chore:</code> for routine tasks and maintenance</li> <li><code>ci:</code> for CI/CD changes</li> <li><code>style:</code> for formatting changes</li> <li><code>perf:</code> for performance improvements</li> </ul>"},{"location":"development/contributing/#release-process","title":"Release Process","text":"<p>Releases are automated using semantic-release. When your PR is merged to main, a new release will be created based on your commit messages.</p>"},{"location":"development/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>Please follow our Code of Conduct in all your interactions with the project.</p>"},{"location":"development/contributing/#questions","title":"Questions?","text":"<p>If you have any questions or need help, please open an issue or reach out to the maintainers.</p>"},{"location":"development/dependabot/","title":"Dependabot Configuration Guide","text":"<p>This document explains the automated dependency management setup using GitHub Dependabot for the Terraform module.</p>"},{"location":"development/dependabot/#overview","title":"Overview","text":"<p>Dependabot is configured to automatically:</p> <ul> <li>Update Terraform providers and modules</li> <li>Update Go dependencies (for Terratest)</li> <li>Update GitHub Actions</li> <li>Update Python dependencies (for documentation)</li> <li>Update Ruby dependencies (for Kitchen-Terraform)</li> <li>Update NPM dependencies (if any)</li> </ul>"},{"location":"development/dependabot/#configuration-files","title":"Configuration Files","text":""},{"location":"development/dependabot/#githubdependabotyml","title":"<code>.github/dependabot.yml</code>","text":"<p>The main Dependabot configuration file that defines update schedules and settings for different package ecosystems:</p> <ul> <li>Terraform: Weekly updates on Tuesdays for the main module and examples</li> <li>Go modules: Weekly updates on Wednesdays for test dependencies</li> <li>GitHub Actions: Weekly updates on Mondays for CI/CD workflows</li> <li>Python (pip): Weekly updates on Fridays for documentation dependencies</li> <li>Ruby (bundler): Weekly updates on Thursdays for Kitchen-Terraform</li> <li>NPM: Weekly updates on Fridays for any Node.js dependencies</li> </ul>"},{"location":"development/dependabot/#githubworkflowsdependabot-auto-validationyml","title":"<code>.github/workflows/dependabot-auto-validation.yml</code>","text":"<p>Automated workflow that runs when Dependabot opens PRs to:</p> <ol> <li>Validate Terraform configurations across multiple versions</li> <li>Run Go tests (including race detection)</li> <li>Perform security scanning with Trivy</li> <li>Validate documentation builds</li> <li>Auto-approve and merge if all checks pass</li> <li>Notify on failures</li> </ol>"},{"location":"development/dependabot/#local-development","title":"Local Development","text":""},{"location":"development/dependabot/#dependabot-management-script","title":"Dependabot Management Script","text":"<p>Use the <code>scripts/dependabot.sh</code> script for local dependency management:</p> <pre><code># Check for available updates\n./scripts/dependabot.sh check-updates\n\n# Validate current dependencies\n./scripts/dependabot.sh validate-deps\n\n# Run tests with current dependencies\n./scripts/dependabot.sh test-deps\n\n# Run security scans\n./scripts/dependabot.sh security-scan\n\n# Update Terraform providers manually\n./scripts/dependabot.sh update-terraform\n\n# Update Go dependencies\n./scripts/dependabot.sh update-go\n\n# Simulate Dependabot PR validation\n./scripts/dependabot.sh simulate-pr\n</code></pre>"},{"location":"development/dependabot/#task-commands","title":"Task Commands","text":"<p>Use the Task runner for dependency management:</p> <pre><code># Check for updates\ntask deps:check\n\n# Validate dependencies\ntask deps:validate\n\n# Test dependencies\ntask deps:test\n\n# Security scan\ntask deps:security\n\n# Update Terraform providers\ntask deps:update:terraform\n\n# Update Go dependencies\ntask deps:update:go\n\n# Simulate PR validation\ntask deps:simulate-pr\n\n# Run all dependency tasks\ntask deps:all\n</code></pre>"},{"location":"development/dependabot/#dependabot-pr-process","title":"Dependabot PR Process","text":""},{"location":"development/dependabot/#automatic-process","title":"Automatic Process","text":"<ol> <li>Dependabot Detection: Dependabot scans for outdated dependencies weekly</li> <li>PR Creation: Opens PRs with dependency updates</li> <li>Auto-Validation: GitHub Actions workflow automatically runs:</li> <li>Terraform validation across multiple versions</li> <li>Go tests with race detection</li> <li>Security scanning</li> <li>Documentation validation</li> <li>Auto-Approval: If all checks pass, PR is auto-approved and merged</li> <li>Failure Notification: If checks fail, team is notified via PR comment</li> </ol>"},{"location":"development/dependabot/#manual-review-process","title":"Manual Review Process","text":"<p>For PRs that require manual review (major version updates, security advisories):</p> <ol> <li>Review the PR description and changelog</li> <li>Run local validation: <code>task deps:simulate-pr</code></li> <li>Test specific functionality affected by the update</li> <li>Approve and merge manually</li> </ol>"},{"location":"development/dependabot/#security-considerations","title":"Security Considerations","text":""},{"location":"development/dependabot/#update-policies","title":"Update Policies","text":"<ul> <li>Minor/Patch Updates: Auto-merged after validation</li> <li>Major Updates: Require manual review (configured to ignore by default)</li> <li>Security Updates: Prioritized and can override normal schedules</li> </ul>"},{"location":"development/dependabot/#validation-checks","title":"Validation Checks","text":"<p>All dependency updates undergo:</p> <ul> <li>Multi-version Terraform compatibility testing</li> <li>Comprehensive Go test suite</li> <li>Security vulnerability scanning</li> <li>Documentation build validation</li> </ul>"},{"location":"development/dependabot/#customization","title":"Customization","text":""},{"location":"development/dependabot/#modify-update-schedule","title":"Modify Update Schedule","text":"<p>Edit <code>.github/dependabot.yml</code> to change:</p> <ul> <li>Update frequency (<code>daily</code>, <code>weekly</code>, <code>monthly</code>)</li> <li>Specific days and times</li> <li>Timezone settings</li> </ul>"},{"location":"development/dependabot/#add-new-ecosystems","title":"Add New Ecosystems","text":"<p>To track additional dependency types:</p> <ol> <li>Add new package ecosystem entry to <code>dependabot.yml</code></li> <li>Update validation workflow if needed</li> <li>Add corresponding tasks to <code>Taskfile.yml</code></li> </ol>"},{"location":"development/dependabot/#change-auto-merge-behavior","title":"Change Auto-merge Behavior","text":"<p>Modify <code>.github/workflows/dependabot-auto-validation.yml</code>:</p> <ul> <li>Remove auto-merge steps for manual review only</li> <li>Add additional validation steps</li> <li>Change approval requirements</li> </ul>"},{"location":"development/dependabot/#monitoring","title":"Monitoring","text":""},{"location":"development/dependabot/#github-insights","title":"GitHub Insights","text":"<p>Monitor Dependabot activity:</p> <ul> <li>Go to repository \u2192 Insights \u2192 Dependency graph \u2192 Dependabot</li> <li>View update history and current status</li> <li>Check for failed update attempts</li> </ul>"},{"location":"development/dependabot/#notifications","title":"Notifications","text":"<p>Configure notifications for:</p> <ul> <li>Failed Dependabot runs</li> <li>Security advisories</li> <li>Major version updates requiring review</li> </ul>"},{"location":"development/dependabot/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/dependabot/#common-issues","title":"Common Issues","text":"<ol> <li>Failed Updates: Check the Dependabot log in PR comments</li> <li>Merge Conflicts: Dependabot will rebase automatically</li> <li>Test Failures: Review the GitHub Actions logs</li> <li>Security Alerts: Address high/critical vulnerabilities promptly</li> </ol>"},{"location":"development/dependabot/#manual-intervention","title":"Manual Intervention","text":"<p>If Dependabot fails:</p> <ol> <li>Check the error in PR comments</li> <li>Run local validation: <code>./scripts/dependabot.sh simulate-pr</code></li> <li>Fix issues manually and push updates</li> <li>Re-trigger Dependabot if needed</li> </ol>"},{"location":"development/dependabot/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Monitoring: Review Dependabot PRs weekly</li> <li>Security First: Prioritize security updates</li> <li>Test Locally: Use local scripts before major updates</li> <li>Version Pinning: Pin critical dependencies to avoid breaking changes</li> <li>Changelog Review: Always review dependency changelogs for breaking changes</li> </ol>"},{"location":"development/dependabot/#integration-with-cicd","title":"Integration with CI/CD","text":"<p>The Dependabot configuration integrates with:</p> <ul> <li>CodeQL: Security analysis on updated dependencies</li> <li>Terraform Cloud: Validation in cloud environments</li> <li>GitHub Actions: Automated testing and deployment</li> <li>Documentation: Automatic docs updates with new versions</li> </ul> <p>This ensures that dependency updates maintain security, compatibility, and documentation consistency across the entire project lifecycle.</p>"},{"location":"development/docs-testing/","title":"Documentation Testing Guide","text":"<p>This guide explains how to test the documentation deployment process locally and how to fix common issues.</p>"},{"location":"development/docs-testing/#testing-documentation-locally","title":"Testing Documentation Locally","text":"<p>You can test the documentation locally using the provided test script:</p> <pre><code># Test the docs deployment process without publishing\n./scripts/test-docs-deployment.sh\n\n# Serve the documentation locally\nmkdocs serve\n</code></pre>"},{"location":"development/docs-testing/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"development/docs-testing/#python-ssl-module-initialization-error","title":"Python SSL Module Initialization Error","text":"<p>If you encounter SSL module initialization errors, the <code>fix-python-ssl.sh</code> script can help:</p> <pre><code>source ./scripts/fix-python-ssl.sh\n</code></pre> <p>This script:</p> <ul> <li>Sets appropriate SSL environment variables</li> <li>Verifies system CA certificates</li> <li>Tests SSL connectivity with Python</li> </ul>"},{"location":"development/docs-testing/#mkdocsmike-alias-collision","title":"MkDocs/Mike Alias Collision","text":"<p>Mike can sometimes have issues with alias collisions. The <code>fix-mike-aliases.sh</code> script can help:</p> <pre><code>./scripts/fix-mike-aliases.sh\n</code></pre> <p>This script:</p> <ul> <li>Checks for existing aliases in the gh-pages branch</li> <li>Removes conflicting aliases to avoid deployment errors</li> </ul>"},{"location":"development/docs-testing/#workflow-integration","title":"Workflow Integration","text":"<p>Both fixes are integrated into the GitHub Actions workflows:</p> <ul> <li><code>docs.yml</code> for normal documentation updates</li> <li><code>release.yml</code> for versioned documentation during releases</li> </ul>"},{"location":"development/docs-testing/#manual-deployment","title":"Manual Deployment","text":"<p>For manual deployment, use the following commands:</p> <pre><code># Deploy a specific version\nmike deploy v1.0.0 --push\n\n# Add an alias to a version\nmike alias v1.0.0 latest --push\n\n# Set the default version\nmike set-default latest --push\n</code></pre>"},{"location":"development/docs-testing/#troubleshooting","title":"Troubleshooting","text":"<p>If you still encounter issues:</p> <ol> <li>Check Python and OpenSSL versions</li> <li>Verify mkdocs.yml configuration</li> <li>Clear the site/ directory and .mike state</li> <li>Try manually deleting the gh-pages branch and rebuilding</li> </ol>"},{"location":"development/releases/","title":"Release Automation Guide","text":"<p>This document explains the automated release process for the terraform-github-repo module, including semantic versioning, Terraform Registry publishing, and documentation updates.</p>"},{"location":"development/releases/#overview","title":"Overview","text":"<p>The release system is fully automated using:</p> <ul> <li>Semantic Release: Automated versioning based on conventional commits</li> <li>GitHub Actions: CI/CD workflows for validation and publishing</li> <li>Terraform Registry: Automatic module publishing</li> <li>Versioned Documentation: Automated docs deployment with mike</li> </ul>"},{"location":"development/releases/#release-workflows","title":"Release Workflows","text":""},{"location":"development/releases/#1-automatic-releases-releaseyml","title":"1. Automatic Releases (<code>release.yml</code>)","text":"<p>Triggered on every push to <code>main</code> branch:</p> <ol> <li>Pre-release Validation</li> <li>Terraform format and validation</li> <li>Go test suite execution</li> <li>Example validation</li> <li> <p>Security scanning</p> </li> <li> <p>Semantic Release</p> </li> <li>Analyzes commit messages</li> <li>Determines version bump type</li> <li>Generates changelog</li> <li> <p>Creates GitHub release</p> </li> <li> <p>Terraform Registry Publishing</p> </li> <li>Validates registry requirements</li> <li>Monitors registry publication</li> <li> <p>Notifies on completion</p> </li> <li> <p>Documentation Updates</p> </li> <li>Deploys versioned docs with mike</li> <li>Updates changelog in docs</li> <li>Publishes to GitHub Pages</li> </ol>"},{"location":"development/releases/#2-manual-releases-manual-releaseyml","title":"2. Manual Releases (<code>manual-release.yml</code>)","text":"<p>For controlled releases when needed:</p> <ul> <li>Triggered via GitHub Actions UI</li> <li>Supports patch/minor/major release types</li> <li>Optional test skipping (not recommended)</li> <li>Force release option for edge cases</li> </ul>"},{"location":"development/releases/#semantic-versioning","title":"Semantic Versioning","text":""},{"location":"development/releases/#commit-types-and-release-impact","title":"Commit Types and Release Impact","text":"Commit Type Release Type Example <code>feat:</code> Minor (0.X.0) <code>feat: add branch protection rules</code> <code>fix:</code> Patch (0.0.X) <code>fix: resolve variable validation issue</code> <code>perf:</code> Patch (0.0.X) <code>perf: optimize repository creation</code> <code>refactor:</code> Patch (0.0.X) <code>refactor: improve code organization</code> <code>BREAKING CHANGE:</code> Major (X.0.0) <code>feat!: remove deprecated variables</code>"},{"location":"development/releases/#commit-message-format","title":"Commit Message Format","text":"<pre><code>`type`[optional scope]: `description`\n\n[optional body]\n\n[optional footer(s)]\n</code></pre> <p><code>type</code>[optional scope]: <code>description</code></p> <p>[optional body]</p> <p>[optional footer(s)]</p> <pre><code>**Examples:**\n\n```bash\nfeat(security): add CodeQL scanning configuration\nfix(validation): resolve terraform version constraint\ndocs: update README with new examples\nchore: update dependencies\n</code></pre>"},{"location":"development/releases/#release-management-scripts","title":"Release Management Scripts","text":""},{"location":"development/releases/#local-release-management","title":"Local Release Management","text":"<p>Use the <code>scripts/release.sh</code> script:</p> <pre><code># Check if ready for release\n./scripts/release.sh check\n\n# Prepare repository for release\n./scripts/release.sh prepare\n\n# Preview next release version\n./scripts/release.sh preview\n\n# Create a release\n./scripts/release.sh release\n\n# Check release status\n./scripts/release.sh status\n\n# Check Terraform Registry\n./scripts/release.sh registry\n\n# Update documentation\n./scripts/release.sh docs\n</code></pre>"},{"location":"development/releases/#task-commands","title":"Task Commands","text":"<p>Use Task runner for release management:</p> <pre><code># Check release readiness\ntask release:check\n\n# Prepare for release\ntask release:prepare\n\n# Preview release\ntask release:preview\n\n# Create release\ntask release:create\n\n# Check status\ntask release:status\n\n# Check registry\ntask release:registry\n\n# Full release workflow\ntask release:all\n</code></pre>"},{"location":"development/releases/#terraform-registry-publishing","title":"Terraform Registry Publishing","text":""},{"location":"development/releases/#automatic-publishing-process","title":"Automatic Publishing Process","text":"<ol> <li>Release Detection: Registry monitors GitHub releases</li> <li>Validation: Registry validates module structure</li> <li>Publication: Module becomes available in registry</li> <li>Notification: Workflow confirms publication</li> </ol>"},{"location":"development/releases/#registry-requirements","title":"Registry Requirements","text":"<p>The module meets all Terraform Registry requirements:</p> <ul> <li>\u2705 Standard Structure: <code>main.tf</code>, <code>variables.tf</code>, <code>outputs.tf</code></li> <li>\u2705 Documentation: Comprehensive <code>README.md</code></li> <li>\u2705 Examples: Complete usage examples in <code>examples/</code></li> <li>\u2705 License: Open source license file</li> <li>\u2705 Semantic Versioning: Git tags following semver</li> <li>\u2705 Module Metadata: <code>.terraform-module.yml</code> configuration</li> </ul>"},{"location":"development/releases/#module-usage","title":"Module Usage","text":"<p>Once published, users can reference the module:</p> <pre><code>module \"github_repo\" {\n  source = \"kpeacocke/terraform-github-repo/github\"\n  version = \"~&gt; 1.0\"\n\n  # Your configuration here\n  name = \"my-awesome-repo\"\n  description = \"My awesome repository\"\n}\n</code></pre>"},{"location":"development/releases/#manual-release-process","title":"Manual Release Process","text":""},{"location":"development/releases/#via-github-actions-ui","title":"Via GitHub Actions UI","text":"<ol> <li>Go to Actions \u2192 Manual Release</li> <li>Click Run workflow</li> <li>Select release type (patch/minor/major)</li> <li>Configure options if needed</li> <li>Click Run workflow</li> </ol>"},{"location":"development/releases/#via-github-cli","title":"Via GitHub CLI","text":"<pre><code># Trigger manual patch release\ngh workflow run manual-release.yml --field release_type=patch\n\n# Trigger manual minor release\ngh workflow run manual-release.yml --field release_type=minor\n\n# Force major release (skip tests)\ngh workflow run manual-release.yml \\\n  --field release_type=major \\\n  --field skip_tests=true \\\n  --field force_release=true\n</code></pre>"},{"location":"development/releases/#release-validation","title":"Release Validation","text":""},{"location":"development/releases/#pre-release-checks","title":"Pre-release Checks","text":"<p>Every release undergoes comprehensive validation:</p> <ol> <li>Code Quality</li> <li>Terraform formatting (<code>terraform fmt</code>)</li> <li>Terraform validation (<code>terraform validate</code>)</li> <li>Go test suite with race detection</li> <li> <p>Example module validation</p> </li> <li> <p>Security</p> </li> <li>Trivy security scanning</li> <li>Dependency vulnerability checks</li> <li> <p>CodeQL analysis</p> </li> <li> <p>Documentation</p> </li> <li>terraform-docs generation</li> <li>MkDocs build validation</li> <li> <p>Changelog generation</p> </li> <li> <p>Registry Compliance</p> </li> <li>Required file validation</li> <li>Module structure verification</li> <li>License compliance</li> </ol>"},{"location":"development/releases/#versioned-documentation","title":"Versioned Documentation","text":""},{"location":"development/releases/#automatic-deployment","title":"Automatic Deployment","text":"<p>Documentation is automatically versioned and deployed:</p> <ul> <li>Latest Version: Always points to the newest release</li> <li>Version-Specific: Each release gets its own docs version</li> <li>GitHub Pages: Hosted at <code>https://kpeacocke.github.io/terraform-github-repo/</code></li> </ul>"},{"location":"development/releases/#mike-configuration","title":"Mike Configuration","text":"<p>The documentation uses mike for versioning:</p> <pre><code># Deploy version locally\nmike deploy v1.2.3 latest --update-aliases\n\n# List versions\nmike list\n\n# Serve locally\nmike serve\n</code></pre>"},{"location":"development/releases/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/releases/#common-issues","title":"Common Issues","text":"<ol> <li>Release Not Triggered</li> <li>Check commit message format</li> <li>Ensure conventional commit types</li> <li> <p>Verify main branch push</p> </li> <li> <p>Tests Failing</p> </li> <li>Run tests locally: <code>task test</code></li> <li>Check environment variables</li> <li> <p>Validate Terraform configuration</p> </li> <li> <p>Registry Not Updated</p> </li> <li>Wait 10-15 minutes for registry sync</li> <li>Check registry webhook logs</li> <li> <p>Verify tag format (v1.2.3)</p> </li> <li> <p>Documentation Not Deploying</p> </li> <li>Check GitHub Pages settings</li> <li>Verify mike configuration</li> <li>Review workflow logs</li> </ol>"},{"location":"development/releases/#debug-commands","title":"Debug Commands","text":"<pre><code># Check semantic-release in dry-run mode\nnpx semantic-release --dry-run --no-ci\n\n# Validate Terraform Registry requirements\nterraform fmt -check -recursive\nterraform validate\n\n# Test documentation build\nmkdocs build --strict\n\n# Check git tags\ngit tag --list --sort=-version:refname\n</code></pre>"},{"location":"development/releases/#best-practices","title":"Best Practices","text":""},{"location":"development/releases/#commit-message-guidelines","title":"Commit Message Guidelines","text":"<ol> <li>Use Conventional Commits: Follow the standard format</li> <li>Be Descriptive: Clear, concise descriptions</li> <li>Include Context: Add body text for complex changes</li> <li>Breaking Changes: Use <code>!</code> or <code>BREAKING CHANGE:</code> footer</li> </ol>"},{"location":"development/releases/#release-strategy","title":"Release Strategy","text":"<ol> <li>Regular Releases: Release frequently with small changes</li> <li>Feature Branches: Use branches for large features</li> <li>Hotfixes: Use patch releases for urgent fixes</li> <li>Documentation: Keep docs up-to-date with releases</li> </ol>"},{"location":"development/releases/#version-management","title":"Version Management","text":"<ol> <li>Semantic Versioning: Strictly follow semver principles</li> <li>Backward Compatibility: Maintain compatibility in minor releases</li> <li>Migration Guides: Provide guides for breaking changes</li> <li>Deprecation Notices: Give advance warning before removal</li> </ol>"},{"location":"development/releases/#monitoring-and-alerts","title":"Monitoring and Alerts","text":""},{"location":"development/releases/#release-monitoring","title":"Release Monitoring","text":"<ul> <li>GitHub Actions: Monitor workflow success/failure</li> <li>Terraform Registry: Check module availability</li> <li>Documentation: Verify docs deployment</li> <li>Dependencies: Monitor dependency updates</li> </ul>"},{"location":"development/releases/#notification-channels","title":"Notification Channels","text":"<ul> <li>GitHub Issues: Automated release tracking issues</li> <li>GitHub Releases: Release notes and changelogs</li> <li>Registry Updates: Module version notifications</li> <li>Documentation: Versioned docs updates</li> </ul>"},{"location":"development/releases/#integration-with-cicd","title":"Integration with CI/CD","text":"<p>The release system integrates with:</p> <ul> <li>Dependabot: Automated dependency updates</li> <li>CodeQL: Security analysis</li> <li>Terraform Cloud: Module validation</li> <li>GitHub Pages: Documentation hosting</li> </ul> <p>This ensures that every release maintains security, compatibility, and documentation consistency across the entire project lifecycle.</p>"},{"location":"development/security-credentials/","title":"Credential Security Guidelines","text":""},{"location":"development/security-credentials/#local-development","title":"Local Development","text":"<p>For local development and testing, follow these steps for secure credential management:</p> <ol> <li>Copy <code>.env.example</code> to <code>.env</code> (which is git-ignored)</li> </ol> <pre><code>cp .env.example .env\n</code></pre> <ol> <li>Edit your <code>.env</code> file and add your personal access token and other required variables</li> </ol> <pre><code>GITHUB_TOKEN=your_personal_access_token\nGITHUB_OWNER=your_github_username_or_org\n</code></pre> <ol> <li>When running Terraform or tests, the environment variables will be automatically loaded</li> </ol>"},{"location":"development/security-credentials/#cicd-workflows","title":"CI/CD Workflows","text":"<p>In GitHub Actions workflows:</p> <ul> <li>Use GitHub repository secrets for all credentials</li> <li>Reference them via <code>${{ secrets.SECRET_NAME }}</code></li> <li>Never commit tokens or sensitive data directly to any files</li> </ul>"},{"location":"development/security-credentials/#terraform-plan-files","title":"Terraform Plan Files","text":"<ul> <li>Terraform plan files (<code>.tfplan</code>, <code>tfplan.binary</code>, etc.) contain sensitive values, including PATs and tokens</li> <li>These files are now excluded by <code>.gitignore</code>, but you should be extra cautious:</li> <li>Never commit these files to version control</li> <li>Delete plan files immediately after use (<code>rm -f tfplan.binary</code>)</li> <li>Use <code>-compact-warnings</code> flag to reduce sensitive data in logs</li> <li>Use <code>-no-color</code> flag to avoid ANSI codes that may obfuscate patterns in security scans</li> <li>Always verify no plan files exist using <code>git status</code> before pushing</li> <li>Our CI workflows have been updated to automatically delete plan files after use</li> </ul>"},{"location":"development/security-credentials/#rotating-compromised-credentials","title":"Rotating Compromised Credentials","text":"<p>If credentials are ever compromised:</p> <ol> <li>Immediately revoke the compromised token/credential</li> <li>Generate a new token with appropriate scopes</li> <li>Update all repository secrets with the new token</li> <li>Check repository history for any other potential leaks</li> </ol>"},{"location":"development/security-credentials/#checking-for-committed-sensitive-data","title":"Checking for Committed Sensitive Data","text":"<p>If you suspect sensitive data may have been committed, use these steps:</p> <ol> <li>Check for tokens in the repository:</li> </ol> <pre><code>git grep -i \"token\\|secret\\|password\\|key\\|credential\" -- \"*.tf\" \"*.tfvars\" \"*.sh\" \"*.md\"\n</code></pre> <ol> <li>Check for accidentally committed plan files:</li> </ol> <pre><code>git ls-files | grep -E \"tfplan|\\.binary$|plan\\.json\"\n</code></pre> <ol> <li>Use git-secrets or other scanning tools:</li> </ol> <pre><code># If git-secrets is installed\ngit secrets --scan\n</code></pre> <ol> <li> <p>If sensitive data is found:</p> </li> <li> <p>Revoke the compromised credentials immediately</p> </li> <li>Create a new commit that replaces the sensitive data</li> <li>Consider using BFG Repo-Cleaner or git-filter-repo to clean history</li> <li> <p>Force-push the cleaned history after coordinating with your team</p> </li> <li> <p>Consult detailed guidance on handling leaks in our Sensitive Data documentation</p> </li> </ol>"},{"location":"development/security-hardening/","title":"GitHub Actions Security Hardening Guide","text":"<p>This document outlines the comprehensive security hardening implemented for all GitHub Actions workflows in the terraform-github-repo module.</p>"},{"location":"development/security-hardening/#overview","title":"Overview","text":"<p>GitHub Actions security hardening focuses on two critical areas:</p> <ol> <li>SHA Pinning: Pinning actions to immutable SHA commits</li> <li>Least-Privilege Permissions: Implementing minimal required permissions</li> </ol>"},{"location":"development/security-hardening/#security-improvements-implemented","title":"Security Improvements Implemented","text":""},{"location":"development/security-hardening/#1-sha-pinning-for-supply-chain-security","title":"1. SHA Pinning for Supply Chain Security","text":"<p>Problem: Using mutable tags like <code>@v4</code> or <code>@master</code> can lead to supply chain attacks where malicious code is injected into action updates.</p> <p>Solution: Pin all actions to specific SHA commits that are immutable.</p> <p>Before:</p> <pre><code>- uses: actions/checkout@v4\n- uses: hashicorp/setup-terraform@v3\n- uses: aquasecurity/trivy-action@master\n</code></pre> <p>After:</p> <pre><code>- uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7\n- uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1\n- uses: aquasecurity/trivy-action@7c2007bcb556501da015201bcba5aa14069b74e2 # master\n</code></pre>"},{"location":"development/security-hardening/#2-least-privilege-permissions","title":"2. Least-Privilege Permissions","text":"<p>Problem: Default GitHub Actions permissions grant broad access that may not be necessary.</p> <p>Solution: Implement explicit, minimal permissions at both workflow and job levels.</p> <p>Before (implicit permissions):</p> <pre><code>jobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      # Inherits all permissions\n</code></pre> <p>After (explicit minimal permissions):</p> <pre><code>permissions:\n  contents: read          # Only what's needed\n  security-events: write  # For SARIF uploads\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    permissions:\n      contents: read        # Job-specific, even more restrictive\n</code></pre>"},{"location":"development/security-hardening/#actions-security-matrix","title":"Actions Security Matrix","text":"Action Old Version SHA Pin Comments <code>actions/checkout</code> <code>@v4</code> <code>@692973e3d937129bcbf40652eb9f2f61becf3332</code> Core checkout action <code>actions/setup-go</code> <code>@v5</code> <code>@cdcb36043654635271a94b9a6d1392de5bb323a7</code> Go environment setup <code>actions/setup-node</code> <code>@v4</code> <code>@60edb5dd545a775178f52524783378180af0d1f8</code> Node.js setup <code>actions/setup-python</code> <code>@v5</code> <code>@82c7e631bb3cdc910f68e0081d67478d79c6982d</code> Python setup <code>hashicorp/setup-terraform</code> <code>@v3</code> <code>@651471c36a6092792c552e8b1bef71e592b462d8</code> Terraform setup <code>aquasecurity/trivy-action</code> <code>@master</code> <code>@7c2007bcb556501da015201bcba5aa14069b74e2</code> Security scanning <code>github/codeql-action/*</code> <code>@v3</code> <code>@eb055d739abdc2e8de2e5f4ba1a8b246daa31dc0</code> CodeQL security analysis <code>terraform-docs/gh-actions</code> <code>@v1</code> <code>@e47bfa196e79fa50987ef99aadc16d521c4bd8a2</code> Documentation generation <code>stefanzweifel/git-auto-commit-action</code> <code>@v4</code> <code>@8756aa072ef5b4a080af5dc8fef36c5d586e521d</code> Auto- commit"},{"location":"development/security-hardening/#permission-matrix-by-workflow","title":"Permission Matrix by Workflow","text":""},{"location":"development/security-hardening/#ci-workflow-ciyml","title":"CI Workflow (<code>ci.yml</code>)","text":"<pre><code>permissions:\n  contents: read          # Read repository contents\n  security-events: write  # Upload SARIF security results\n  pull-requests: write    # Comment on PRs and auto-commit\n  actions: read          # Read workflow information\n</code></pre>"},{"location":"development/security-hardening/#codeql-workflow-codeqlyml","title":"CodeQL Workflow (<code>codeql.yml</code>)","text":"<pre><code>permissions:\n  actions: read           # Read workflow information\n  contents: read          # Read repository contents\n  security-events: write  # Upload CodeQL results\n</code></pre>"},{"location":"development/security-hardening/#release-workflow-releaseyml","title":"Release Workflow (<code>release.yml</code>)","text":"<pre><code>permissions:\n  contents: write         # Create releases and push tags\n  issues: write          # Create release tracking issues\n  pull-requests: write   # Comment on PRs\n  actions: write        # Trigger other workflows\n  pages: write          # Deploy documentation\n  id-token: write       # OIDC token for secure operations\n</code></pre>"},{"location":"development/security-hardening/#documentation-workflow-docsyml","title":"Documentation Workflow (<code>docs.yml</code>)","text":"<pre><code>permissions:\n  contents: read          # Read repository contents\n  pages: write           # Deploy to GitHub Pages\n  id-token: write        # OIDC token for Pages deployment\n</code></pre>"},{"location":"development/security-hardening/#dependabot-auto-validation-dependabot-auto-validationyml","title":"Dependabot Auto-Validation (<code>dependabot-auto-validation.yml</code>)","text":"<pre><code>permissions:\n  contents: read          # Read repository contents\n  security-events: write  # Upload security scan results\n  pull-requests: write   # Auto-approve and merge PRs\n  actions: write         # Trigger workflows\n</code></pre>"},{"location":"development/security-hardening/#security-hardening-tools","title":"Security Hardening Tools","text":""},{"location":"development/security-hardening/#1-security-hardening-script","title":"1. Security Hardening Script","text":"<p>Use the <code>scripts/security-hardening.sh</code> script to manage security updates:</p> <pre><code># Update all workflows with SHA pinning\n./scripts/security-hardening.sh update-all\n\n# Validate current security status\n./scripts/security-hardening.sh validate\n\n# Generate security report\n./scripts/security-hardening.sh report\n\n# Restore from backups if needed\n./scripts/security-hardening.sh restore\n</code></pre>"},{"location":"development/security-hardening/#2-task-commands","title":"2. Task Commands","text":"<p>Added to <code>Taskfile.yml</code>:</p> <pre><code># Security hardening tasks\ntask security:harden      # Apply security hardening\ntask security:validate    # Validate security configuration\ntask security:report      # Generate security report\n</code></pre>"},{"location":"development/security-hardening/#validation-and-monitoring","title":"Validation and Monitoring","text":""},{"location":"development/security-hardening/#pre-commit-validation","title":"Pre-commit Validation","text":"<p>Add to <code>.pre-commit-config.yaml</code>:</p> <pre><code>repos:\n  - repo: local\n    hooks:\n      - id: validate-actions-security\n        name: Validate GitHub Actions Security\n        entry: ./scripts/security-hardening.sh validate\n        language: script\n        pass_filenames: false\n</code></pre>"},{"location":"development/security-hardening/#automated-monitoring","title":"Automated Monitoring","text":"<p>The workflows now include security monitoring:</p> <ol> <li>SHA Drift Detection: Alerts if actions revert to tag-based references</li> <li>Permission Auditing: Validates that permissions remain minimal</li> <li>Security Report Generation: Automatic reports on security posture</li> </ol>"},{"location":"development/security-hardening/#maintenance-guidelines","title":"Maintenance Guidelines","text":""},{"location":"development/security-hardening/#monthly-security-review","title":"Monthly Security Review","text":"<ol> <li>Check for Updates: Review actions for security updates</li> <li>Update SHAs: Pin to latest secure versions</li> <li>Audit Permissions: Ensure permissions remain minimal</li> <li>Test Workflows: Validate that hardened workflows function correctly</li> </ol>"},{"location":"development/security-hardening/#sha-update-process","title":"SHA Update Process","text":"<pre><code># 1. Check for new versions\ngh api repos/actions/checkout/releases/latest\n\n# 2. Get the SHA for the new version\ngit ls-remote https://github.com/actions/checkout refs/tags/v4.1.8\n\n# 3. Update the SHA in workflows\n./scripts/security-hardening.sh update-all\n\n# 4. Test the updated workflows\n./scripts/security-hardening.sh validate\n</code></pre>"},{"location":"development/security-hardening/#emergency-response","title":"Emergency Response","text":"<p>If a security vulnerability is discovered:</p> <ol> <li>Immediate Response: Use script to restore from backups</li> <li>Assessment: Evaluate impact of the vulnerability</li> <li>Update: Pin to a secure SHA version</li> <li>Validation: Test all affected workflows</li> </ol>"},{"location":"development/security-hardening/#security-benefits","title":"Security Benefits","text":""},{"location":"development/security-hardening/#supply-chain-protection","title":"Supply Chain Protection","text":"<ul> <li>Immutable References: SHA pins prevent malicious updates</li> <li>Reproducible Builds: Same SHA always produces same behavior</li> <li>Audit Trail: Clear history of action versions used</li> </ul>"},{"location":"development/security-hardening/#access-control","title":"Access Control","text":"<ul> <li>Minimal Permissions: Reduced blast radius of potential breaches</li> <li>Explicit Grants: No hidden or implicit permissions</li> <li>Job Isolation: Different jobs have different permission levels</li> </ul>"},{"location":"development/security-hardening/#monitoring-and-compliance","title":"Monitoring and Compliance","text":"<ul> <li>Security Reporting: Automated security posture reports</li> <li>Compliance Tracking: Clear documentation of security measures</li> <li>Change Management: Controlled updates with validation</li> </ul>"},{"location":"development/security-hardening/#compliance-standards","title":"Compliance Standards","text":"<p>This security hardening helps meet:</p> <ul> <li>SOC 2 Type II: Supply chain security controls</li> <li>ISO 27001: Information security management</li> <li>NIST Cybersecurity Framework: Supply chain risk management</li> <li>GitHub Security Best Practices: Platform-specific recommendations</li> </ul>"},{"location":"development/security-hardening/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/security-hardening/#common-issues","title":"Common Issues","text":"<ol> <li>SHA Not Found</li> </ol> <pre><code># Check if SHA exists\ngit ls-remote https://github.com/actions/checkout &lt;SHA&gt;\n</code></pre> <ol> <li>Permission Denied</li> </ol> <pre><code># Add required permission to workflow\npermissions:\n  contents: read\n  # Add missing permission here\n</code></pre> <ol> <li>Workflow Failure</li> </ol> <pre><code># Restore from backup\n./scripts/security-hardening.sh restore\n</code></pre>"},{"location":"development/security-hardening/#validation-commands","title":"Validation Commands","text":"<pre><code># Check for unpinned actions\ngrep -r \"uses:.*@v[0-9]\" .github/workflows/\n\n# Check for missing permissions\ngrep -L \"permissions:\" .github/workflows/*.yml\n\n# Validate YAML syntax\nyamllint .github/workflows/\n</code></pre>"},{"location":"development/security-hardening/#resources","title":"Resources","text":"<ul> <li>GitHub Actions Security Hardening</li> <li>OWASP Supply Chain Security</li> <li>NIST Secure Software Development Framework</li> <li>GitHub Security Lab</li> </ul>"},{"location":"development/security-hardening/#continuous-improvement","title":"Continuous Improvement","text":"<p>This security hardening is an ongoing process:</p> <ol> <li>Regular Updates: Monthly security reviews</li> <li>Monitoring: Automated security posture tracking</li> <li>Education: Team training on secure CI/CD practices</li> <li>Innovation: Adopting new security features as they become available</li> </ol> <p>The combination of SHA pinning and least-privilege permissions provides a robust security foundation for the CI/CD pipeline while maintaining functionality and ease of maintenance.</p>"},{"location":"development/sensitive-data/","title":"Handling Sensitive Data in Terraform","text":"<p>This document provides guidance on managing sensitive data in Terraform configurations, particularly for this module. It specifically covers handling GitHub tokens.</p>"},{"location":"development/sensitive-data/#mark-variables-as-sensitive","title":"Mark Variables as Sensitive","text":"<p>Always mark variables containing tokens, passwords or other credentials as sensitive:</p> <pre><code>variable \"github_token\" {\n  description = \"GitHub personal access token\"\n  type        = string\n  sensitive   = true  # This prevents the value from being shown in CLI output\n}\n</code></pre>"},{"location":"development/sensitive-data/#use-compact-warnings-when-running-terraform","title":"Use <code>-compact-warnings</code> when Running Terraform","text":"<p>When running Terraform commands, use the <code>-compact-warnings</code> flag to reduce the chance of sensitive values appearing in logs:</p> <pre><code>terraform plan -compact-warnings\n</code></pre>"},{"location":"development/sensitive-data/#delete-plan-files-after-use","title":"Delete Plan Files After Use","text":"<p>Terraform plan files contain a snapshot of all values, including sensitive ones. Always delete them after use:</p> <pre><code>terraform plan -out=tfplan.binary\n# Use the plan...\nrm -f tfplan.binary  # Delete immediately after use\n</code></pre>"},{"location":"development/sensitive-data/#use-github-actions-secrets","title":"Use GitHub Actions Secrets","text":"<p>In CI/CD workflows, use GitHub Actions secrets rather than environment files:</p> <pre><code>env:\n  TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }}\n</code></pre>"},{"location":"development/sensitive-data/#use-terraforms-nonsensitive-function-carefully","title":"Use Terraform's <code>nonsensitive()</code> Function Carefully","text":"<p>The <code>nonsensitive()</code> function unwraps sensitive values and should be used cautiously. Only use it in cases where you need to output a value and are certain it's safe to do so.</p>"},{"location":"development/sensitive-data/#avoid-logging-sensitive-values","title":"Avoid Logging Sensitive Values","text":"<p>Avoid debug outputs or logging that might capture sensitive values:</p> <pre><code># BAD - might log sensitive value\noutput \"debug_token\" {\n  value = var.github_token\n}\n\n# GOOD - keeps value sensitive\noutput \"token_provided\" {\n  value = var.github_token != null ? \"Yes\" : \"No\"\n  sensitive = false\n}\n</code></pre>"},{"location":"development/sensitive-data/#test-with-dummy-values","title":"Test with Dummy Values","text":"<p>For testing, use placeholder values instead of real tokens when possible.</p>"},{"location":"development/testing/","title":"Testing","text":"<p>This guide explains how to test the Terraform GitHub Repository module.</p>"},{"location":"development/testing/#types-of-tests","title":"Types of Tests","text":"<p>The module includes several types of tests:</p> <ol> <li>Unit tests: Verify individual functions and components</li> <li>Integration tests: Test interactions with the GitHub API</li> <li>End-to-end tests: Validate complete workflows using real repositories</li> </ol>"},{"location":"development/testing/#prerequisites","title":"Prerequisites","text":"<p>To run the tests, you need:</p> <ul> <li>Go (v1.18+)</li> <li>Terraform (v1.0.0+)</li> <li>GitHub personal access token with appropriate permissions</li> </ul>"},{"location":"development/testing/#environment-setup","title":"Environment Setup","text":"<p>Set the required environment variables:</p> <pre><code>export GITHUB_TOKEN=your_github_token\nexport GITHUB_OWNER=your_github_username_or_organization\n</code></pre>"},{"location":"development/testing/#running-unit-tests","title":"Running Unit Tests","text":"<pre><code>go test -v ./test\n</code></pre>"},{"location":"development/testing/#running-integration-tests","title":"Running Integration Tests","text":"<p>Integration tests require a GitHub token and will create temporary repositories:</p> <pre><code>go test -v -tags=integration ./test\n</code></pre>"},{"location":"development/testing/#running-end-to-end-tests","title":"Running End-to-end Tests","text":"<p>End-to-end tests use Kitchen-Terraform and InSpec:</p> <pre><code>bundle install\nbundle exec kitchen test\n</code></pre>"},{"location":"development/testing/#test-coverage","title":"Test Coverage","text":"<p>To generate a test coverage report:</p> <pre><code>go test -v -coverprofile=coverage.out ./test\ngo tool cover -html=coverage.out\n</code></pre>"},{"location":"development/testing/#continuous-integration","title":"Continuous Integration","text":"<p>All tests are run in GitHub Actions for every PR and push to main. The CI workflow includes:</p> <ol> <li>Code formatting and linting checks</li> <li>Unit tests</li> <li>Integration tests with a GitHub token provided by the CI environment</li> <li>End-to-end tests for complete validation</li> </ol>"},{"location":"development/testing/#writing-new-tests","title":"Writing New Tests","text":"<p>When adding new features, please include appropriate tests:</p> <ol> <li>Unit tests for new functions</li> <li>Integration tests for GitHub API interactions</li> <li>End-to-end tests for complete workflows</li> </ol>"},{"location":"development/testing/#test-file-organization","title":"Test File Organization","text":"<ul> <li><code>test/</code> - Contains all test files</li> <li><code>test_helpers.go</code> - Helper functions for tests</li> <li><code>*_test.go</code> - Unit and integration tests</li> <li><code>fixtures/</code> - Test fixtures and template files</li> <li><code>integration/</code> - Integration test profiles for InSpec</li> </ul>"},{"location":"development/testing/#test-best-practices","title":"Test Best Practices","text":"<ol> <li>Use test fixtures rather than hardcoded values</li> <li>Clean up resources after tests complete</li> <li>Use descriptive test names</li> <li>Keep tests isolated and independent</li> <li>Mock external dependencies when appropriate</li> </ol>"},{"location":"development/trivy-migration/","title":"Migration from tfsec to Trivy","text":"<p>This document outlines the migration from tfsec to Trivy for security scanning in the terraform-github-repo module.</p>"},{"location":"development/trivy-migration/#why-migrate","title":"Why Migrate?","text":"<p>As announced by Aqua Security, tfsec is joining the Trivy family. The tfsec project is being consolidated into Trivy to provide a unified security scanning experience.</p> <p>Official Statement: \"tfsec will continue to remain available for the time being, although our engineering attention will be directed at Trivy going forward.\"</p> <p>Read more: https://github.com/aquasecurity/tfsec/discussions/1994</p>"},{"location":"development/trivy-migration/#benefits-of-trivy","title":"Benefits of Trivy","text":"<p>Trivy provides enhanced security scanning capabilities compared to tfsec:</p>"},{"location":"development/trivy-migration/#multi-scanner-approach","title":"\ud83d\udd0d Multi-Scanner Approach","text":"<ul> <li>Vulnerability Scanning: CVE detection in dependencies</li> <li>Secret Detection: Hardcoded secrets and API keys</li> <li>Configuration Scanning: Infrastructure as Code security issues</li> <li>License Scanning: License compliance checks</li> </ul>"},{"location":"development/trivy-migration/#broader-coverage","title":"\ud83c\udfaf Broader Coverage","text":"<ul> <li>Terraform: All tfsec checks plus additional rules</li> <li>Kubernetes: YAML manifest security</li> <li>Docker: Container image vulnerabilities</li> <li>Cloud: AWS, Azure, GCP misconfigurations</li> </ul>"},{"location":"development/trivy-migration/#better-integration","title":"\ud83d\udcca Better Integration","text":"<ul> <li>SARIF Output: Native GitHub Security tab integration</li> <li>Multiple Formats: JSON, Table, GitHub format support</li> <li>CI/CD Friendly: Better error handling and reporting</li> </ul>"},{"location":"development/trivy-migration/#what-changed","title":"What Changed","text":""},{"location":"development/trivy-migration/#configuration-files","title":"Configuration Files","text":"Old (tfsec) New (Trivy) <code>.tfsec.yml</code> <code>.trivy.yaml</code> <code>tfsec-report.json</code> <code>trivy-report.json</code> N/A <code>trivy-results.sarif</code>"},{"location":"development/trivy-migration/#task-commands","title":"Task Commands","text":"Old Command New Command <code>task tfsec</code> <code>task trivy</code> N/A <code>task trivy:terraform</code> N/A <code>task trivy:secrets</code> N/A <code>task trivy:vuln</code> N/A <code>task trivy:all</code>"},{"location":"development/trivy-migration/#cicd-integration","title":"CI/CD Integration","text":"<p>Before (tfsec):</p> <pre><code>- name: Run tfsec\n  run: tfsec --format github\n</code></pre> <p>After (Trivy):</p> <pre><code>- name: Run Trivy security scan\n  uses: aquasecurity/trivy-action@master\n  with:\n    scan-type: 'fs'\n    scan-ref: '.'\n    format: 'sarif'\n    output: 'trivy-results.sarif'\n\n- name: Upload Trivy scan results\n  uses: github/codeql-action/upload-sarif@v3\n  with:\n    sarif_file: 'trivy-results.sarif'\n</code></pre>"},{"location":"development/trivy-migration/#installation","title":"Installation","text":""},{"location":"development/trivy-migration/#local-installation","title":"Local Installation","text":"<p>macOS:</p> <pre><code>brew install trivy\n</code></pre> <p>Linux:</p> <pre><code># Using package manager\nsudo apt-get update &amp;&amp; sudo apt-get install trivy\n\n# Or download binary\ncurl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin\n</code></pre> <p>Windows:</p> <pre><code># Using Chocolatey\nchoco install trivy\n\n# Using Scoop\nscoop install trivy\n</code></pre>"},{"location":"development/trivy-migration/#github-actions","title":"GitHub Actions","text":"<p>Trivy is available as a GitHub Action:</p> <pre><code>- name: Run Trivy scanner\n  uses: aquasecurity/trivy-action@master\n  with:\n    scan-type: 'fs'\n    scan-ref: '.'\n</code></pre>"},{"location":"development/trivy-migration/#usage-examples","title":"Usage Examples","text":""},{"location":"development/trivy-migration/#basic-security-scan","title":"Basic Security Scan","text":"<pre><code># Scan current directory\ntrivy fs .\n\n# Terraform-specific scan\ntrivy config .\n\n# Secret scanning only\ntrivy fs --scanners secret .\n\n# Vulnerability scanning only\ntrivy fs --scanners vuln .\n</code></pre>"},{"location":"development/trivy-migration/#output-formats","title":"Output Formats","text":"<pre><code># Table format (human-readable)\ntrivy fs --format table .\n\n# JSON format (for parsing)\ntrivy fs --format json --output trivy-report.json .\n\n# SARIF format (for GitHub Security)\ntrivy fs --format sarif --output trivy-results.sarif .\n\n# GitHub format (for CI/CD)\ntrivy fs --format github .\n</code></pre>"},{"location":"development/trivy-migration/#using-task-commands","title":"Using Task Commands","text":"<pre><code># Run basic security scan\ntask trivy\n\n# Terraform-specific scan\ntask trivy:terraform\n\n# Secret detection\ntask trivy:secrets\n\n# Comprehensive scan with all outputs\ntask trivy:all\n\n# Generate SARIF for GitHub\ntask trivy:sarif\n</code></pre>"},{"location":"development/trivy-migration/#configuration","title":"Configuration","text":""},{"location":"development/trivy-migration/#trivyyaml-configuration","title":"<code>.trivy.yaml</code> Configuration","text":"<pre><code># Scanner types\nscanner:\n  - vuln      # Vulnerability scanning\n  - secret    # Secret detection\n  - config    # Configuration scanning\n\n# Terraform configuration\nterraform:\n  enabled: true\n  checks:\n    - terraform\n    - kubernetes\n    - docker\n\n# Severity levels\nseverity:\n  - CRITICAL\n  - HIGH\n  - MEDIUM\n  - LOW\n\n# Skip directories\nskip-dirs:\n  - .git\n  - .terraform\n  - node_modules\n\n# Skip files\nskip-files:\n  - \"*.tfstate\"\n  - \"*.tfstate.backup\"\n</code></pre>"},{"location":"development/trivy-migration/#migration-checklist","title":"Migration Checklist","text":"<ul> <li> \u2705 Updated Taskfile.yml - Replaced tfsec tasks with Trivy</li> <li> \u2705 Updated CI/CD workflows - Enhanced GitHub Actions with Trivy</li> <li> \u2705 Created .trivy.yaml - Configuration file for Trivy</li> <li> \u2705 Updated .gitignore - Changed ignore patterns for Trivy outputs</li> <li> \u2705 Updated documentation - README and guides reflect Trivy usage</li> <li> \u2705 Enhanced security scanning - Added multiple scan types</li> <li> \u2705 SARIF integration - GitHub Security tab integration</li> </ul>"},{"location":"development/trivy-migration/#backward-compatibility","title":"Backward Compatibility","text":"<p>The migration maintains backward compatibility:</p> <ul> <li>Same security coverage: All tfsec rules are included in Trivy</li> <li>Enhanced detection: Additional security checks beyond tfsec</li> <li>Familiar workflow: Similar command patterns and outputs</li> <li>Gradual migration: Can run both tools during transition if needed</li> </ul>"},{"location":"development/trivy-migration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/trivy-migration/#common-issues","title":"Common Issues","text":"<ol> <li>Trivy not found</li> </ol> <pre><code># Install Trivy\nbrew install trivy  # macOS\n# or follow installation guide above\n</code></pre> <ol> <li>Configuration not loaded</li> </ol> <pre><code># Verify config file location\ntrivy fs --config .trivy.yaml .\n</code></pre> <ol> <li>Too many false positives</li> </ol> <pre><code># Add to .trivy.yaml\nignore-unfixed: true\nskip-files:\n  - \"test/**/*\"\n  - \"examples/**/*\"\n</code></pre> <ol> <li>SARIF upload fails</li> </ol> <pre><code># Ensure proper permissions in GitHub Actions\npermissions:\n  security-events: write\n</code></pre>"},{"location":"development/trivy-migration/#performance-optimization","title":"Performance Optimization","text":"<pre><code># .trivy.yaml - Optimize for speed\nscanner:\n  - config  # Focus on configuration only for faster scans\n\nskip-dirs:\n  - .git\n  - .terraform\n  - node_modules\n  - docs\n  - test  # Skip test directories for faster CI\n\ncache:\n  backend: \"fs\"\n  ttl: \"24h\"\n</code></pre>"},{"location":"development/trivy-migration/#resources","title":"Resources","text":"<ul> <li>Trivy Documentation: https://aquasecurity.github.io/trivy/</li> <li>tfsec Migration Guide: https://github.com/aquasecurity/tfsec/discussions/1994</li> <li>Trivy Rules: https://avd.aquasec.com/</li> <li>GitHub Security Integration: https://docs.github.com/en/code-security/code-scanning</li> </ul>"},{"location":"development/trivy-migration/#support","title":"Support","text":"<p>If you encounter issues during migration:</p> <ol> <li>Check Trivy Documentation: https://aquasecurity.github.io/trivy/</li> <li>Review Configuration: Ensure <code>.trivy.yaml</code> is properly configured</li> <li>Test Locally: Run <code>task trivy:all</code> to validate setup</li> <li>GitHub Issues: Report issues in the repository</li> </ol> <p>The migration to Trivy provides enhanced security scanning capabilities while maintaining the same level of protection and improving integration with modern CI/CD pipelines.</p>"},{"location":"development/workflow-refactoring/","title":"GitHub Actions Workflow Refactoring","text":"<p>This document summarizes the refactoring performed on the GitHub Actions workflows in this repository to improve maintainability, security, and standardization.</p>"},{"location":"development/workflow-refactoring/#reusable-workflows","title":"Reusable Workflows","text":"<p>Three reusable workflows have been created to standardize common operations across all CI/CD processes:</p>"},{"location":"development/workflow-refactoring/#1-terraform-validation-githubworkflowsreusable-terraform-validationyml","title":"1. Terraform Validation (<code>.github/workflows/reusable-terraform-validation.yml</code>)","text":"<p>A reusable workflow for validating Terraform code with consistent settings:</p> <ul> <li>Configurable Terraform version</li> <li>Format checking</li> <li>Initialization with or without backend</li> <li>Validation</li> <li>TFLint integration</li> <li>Summary reporting</li> </ul>"},{"location":"development/workflow-refactoring/#2-security-scanning-githubworkflowsreusable-security-scanyml","title":"2. Security Scanning (<code>.github/workflows/reusable-security-scan.yml</code>)","text":"<p>A reusable workflow for security scanning using Trivy:</p> <ul> <li>Configurable scan target (filesystem, repository, images)</li> <li>Output format selection (SARIF, JSON, table)</li> <li>Configurable severity filtering</li> <li>Optional upload to GitHub Security tab</li> <li>Artifact storage of scan results</li> </ul>"},{"location":"development/workflow-refactoring/#3-terraform-documentation-githubworkflowsreusable-terraform-docsyml","title":"3. Terraform Documentation (<code>.github/workflows/reusable-terraform-docs.yml</code>)","text":"<p>A reusable workflow for generating Terraform documentation:</p> <ul> <li>Configurable working directory</li> <li>Output file selection</li> <li>Optional Git commit and push</li> <li>Summary reporting</li> </ul>"},{"location":"development/workflow-refactoring/#refactored-workflows","title":"Refactored Workflows","text":"<p>The following workflows have been refactored to use the reusable components:</p>"},{"location":"development/workflow-refactoring/#ci-workflow-githubworkflowsciyml","title":"CI Workflow (<code>.github/workflows/ci.yml</code>)","text":"<ul> <li>Split Terraform validation into multiple jobs using the reusable workflow</li> <li>Added a dedicated terraform-additional-checks job for OPA policy validation</li> <li>Used the reusable security scanning workflow</li> <li>Used the reusable Terraform docs workflow</li> <li>Added a workflow summary</li> </ul>"},{"location":"development/workflow-refactoring/#dependabot-auto-validation-githubworkflowsdependabot-auto-validationyml","title":"Dependabot Auto-Validation (<code>.github/workflows/dependabot-auto-validation.yml</code>)","text":"<ul> <li>Split Terraform validation into multiple version-specific jobs using the reusable workflow</li> <li>Used the reusable security scanning workflow</li> <li>Improved job dependencies and status checking</li> </ul>"},{"location":"development/workflow-refactoring/#build-workflow-githubworkflowsbuildyml","title":"Build Workflow (<code>.github/workflows/build.yml</code>)","text":"<ul> <li>Added Terraform validation using the reusable workflow</li> <li>Added security scanning using the reusable workflow</li> <li>Maintained SonarCloud integration</li> <li>Added a workflow summary</li> </ul>"},{"location":"development/workflow-refactoring/#docs-workflow-githubworkflowsdocsyml","title":"Docs Workflow (<code>.github/workflows/docs.yml</code>)","text":"<ul> <li>Used the reusable Terraform docs workflow for PR-based documentation updates</li> <li>Maintained specialized GitHub Pages deployment logic</li> </ul>"},{"location":"development/workflow-refactoring/#documentation-deployment-fixes","title":"Documentation Deployment Fixes","text":"<p>The documentation deployment process (specifically the <code>docs-update</code> job in the release workflow) was improved to address two critical issues:</p>"},{"location":"development/workflow-refactoring/#1-python-ssl-module-initialization-error","title":"1. Python SSL Module Initialization Error","text":"<ul> <li>Added explicit installation of OpenSSL dependencies in workflows:</li> </ul> <pre><code>- name: Install OpenSSL dependencies\n  run: |\n    sudo apt-get update\n    sudo apt-get install -y libssl-dev openssl ca-certificates\n</code></pre> <ul> <li>Created a dedicated script (<code>scripts/fix-python-ssl.sh</code>) to properly configure SSL environment variables:</li> </ul> <pre><code>export PYTHONHTTPSVERIFY=0\nexport REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt\nexport SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt\n</code></pre> <ul> <li>Added trusted hosts for pip package installation to bypass verification issues:</li> </ul> <pre><code>pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org ...\n</code></pre>"},{"location":"development/workflow-refactoring/#2-mkdocs-latest-alias-collision","title":"2. MkDocs 'latest' Alias Collision","text":"<ul> <li>Created <code>scripts/fix-mike-aliases.sh</code> to detect and remove conflicting aliases:</li> </ul> <pre><code># Check if 'latest' alias exists and remove it\nif grep -q \"latest\" .mike; then\n  grep -v \"latest\" .mike.bak &gt; .mike\n  git commit -m \"fix: removed latest alias to avoid collision\"\nfi\n</code></pre> <ul> <li>Modified mike deployment commands to avoid parallel alias updates by separating version deployment from alias setting:</li> </ul> <pre><code># First deploy the version\nmike deploy --push $VERSION\n# Then set the alias separately\nmike alias --push $VERSION latest\n# Finally set the default\nmike set-default --push latest\n</code></pre>"},{"location":"development/workflow-refactoring/#3-testing-and-documentation-improvements","title":"3. Testing and Documentation Improvements","text":"<ul> <li>Added <code>scripts/test-docs-deployment.sh</code> script for local testing of the full documentation pipeline</li> <li>Created comprehensive troubleshooting documentation in <code>docs/development/docs-testing.md</code></li> <li>Enhanced error handling with better verbosity and fallback options</li> <li>Streamlined branch management and git operations</li> <li>Improved environment variable handling and debug output</li> </ul> <p>These improvements ensure the documentation deployment process is more resilient and easier to debug, and less prone to SSL-related failures or alias conflicts.</p>"},{"location":"development/workflow-refactoring/#benefits","title":"Benefits","text":"<ol> <li>Consistency: Standardized validation, security scanning, and documentation generation</li> <li>Maintainability: Central configuration for common operations</li> <li>DRY principle: Avoid duplicate code across workflows</li> <li>Security: Consistent permissions and security best practices</li> <li>Visibility: Added workflow summaries for better reporting</li> </ol>"},{"location":"development/workflow-refactoring/#future-work","title":"Future Work","text":"<ul> <li>Further consolidate similar jobs in release workflows</li> <li>Improve test coverage of workflow runs</li> <li>Consider additional reusable components for Go testing</li> </ul>"},{"location":"examples/basic/","title":"Basic Repository Example","text":"<p>This example demonstrates how to create a basic GitHub repository using this module.</p>"},{"location":"examples/basic/#usage","title":"Usage","text":"<pre><code>module \"basic_github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"basic-example\"\n  description = \"A basic GitHub repository created with Terraform\"\n  visibility  = \"public\"\n\n  auto_init = true\n\n  topics = [\n    \"terraform\",\n    \"example\",\n    \"github\"\n  ]\n}\n</code></pre>"},{"location":"examples/basic/#features-demonstrated","title":"Features Demonstrated","text":"<ul> <li>Basic repository creation</li> <li>Repository initialization with README</li> <li>Topic assignment</li> </ul>"},{"location":"examples/basic/#how-to-apply","title":"How to Apply","text":"<ol> <li>Copy the example code to your Terraform configuration</li> <li>Replace <code>x.y.z</code> with the latest module version</li> <li>Run <code>terraform init</code> and <code>terraform apply</code></li> </ol>"},{"location":"examples/basic/#expected-outcome","title":"Expected Outcome","text":"<p>This example will create a public GitHub repository with:</p> <ul> <li>A name of \"basic-example\"</li> <li>A description</li> <li>An initial README file</li> <li>Three topics (terraform, example, github)</li> </ul>"},{"location":"examples/enterprise/","title":"Enterprise Setup Example","text":"<p>This example demonstrates how to use the module in an enterprise environment with team permissions and advanced security features.</p>"},{"location":"examples/enterprise/#usage","title":"Usage","text":"<pre><code>module \"enterprise_github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"enterprise-app\"\n  description = \"Enterprise application repository with security features\"\n  visibility  = \"private\"\n\n  branch_protection = {\n    main = {\n      required_reviews           = 2\n      required_checks            = [\"ci-test\", \"security-scan\", \"compliance-check\"]\n      dismiss_stale_reviews      = true\n      require_code_owner_reviews = true\n      require_signed_commits     = true\n    }\n\n    production = {\n      required_reviews           = 3\n      required_checks            = [\"ci-test\", \"security-scan\", \"compliance-check\", \"performance-test\"]\n      dismiss_stale_reviews      = true\n      require_code_owner_reviews = true\n      require_signed_commits     = true\n      enforce_admins             = true\n    }\n  }\n\n  teams = [\n    {\n      name       = \"developers\"\n      permission = \"push\"\n    },\n    {\n      name       = \"security-team\"\n      permission = \"maintain\"\n    },\n    {\n      name       = \"operations\"\n      permission = \"maintain\"\n    },\n    {\n      name       = \"senior-leadership\"\n      permission = \"admin\"\n    }\n  ]\n\n  vulnerability_alerts = true\n  secret_scanning      = true\n\n  files = {\n    \"CODEOWNERS\" = {\n      content = &lt;&lt;-EOT\n      # Default owners\n      *                 @org/security-team\n\n      # Infrastructure\n      *.tf             @org/platform-team\n      *.tfvars         @org/platform-team\n\n      # CI/CD\n      /.github/        @org/platform-team\n\n      # Application code\n      /src/            @org/developers\n      /test/           @org/developers\n      EOT\n    },\n\n    \"SECURITY.md\" = {\n      content = file(\"${path.module}/templates/SECURITY.md\")\n    }\n  }\n\n  webhooks = [\n    {\n      url          = \"https://security.example.com/webhook\"\n      content_type = \"json\"\n      events       = [\"push\", \"pull_request\"]\n      secret       = var.webhook_secret\n      active       = true\n    }\n  ]\n}\n</code></pre>"},{"location":"examples/enterprise/#features-demonstrated","title":"Features Demonstrated","text":"<ul> <li>Private repository with multiple branch protection rules</li> <li>Team access management</li> <li>Security features (vulnerability alerts, secret scanning)</li> <li>CODEOWNERS setup</li> <li>Security policy</li> <li>Security webhook integration</li> </ul>"},{"location":"examples/enterprise/#how-to-apply","title":"How to Apply","text":"<ol> <li>Copy the example code to your Terraform configuration</li> <li>Replace <code>x.y.z</code> with the latest module version</li> <li>Set up the required teams in your GitHub organization</li> <li>Set the <code>webhook_secret</code> variable</li> <li>Run <code>terraform init</code> and <code>terraform apply</code></li> </ol>"},{"location":"examples/multi-language/","title":"Multi-Language Projects Example","text":"<p>This example demonstrates how to configure a GitHub repository for projects using multiple programming languages.</p>"},{"location":"examples/multi-language/#usage","title":"Usage","text":"<pre><code>module \"multi_language_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"multi-language-app\"\n  description = \"Application using multiple programming languages\"\n  visibility  = \"public\"\n\n  topics = [\n    \"multi-language\",\n    \"web-app\",\n    \"typescript\",\n    \"golang\",\n    \"python\"\n  ]\n\n  branch_protection = {\n    main = {\n      required_reviews = 1\n      required_checks  = [\"frontend-tests\", \"backend-tests\", \"integration-tests\"]\n    }\n  }\n\n  files = {\n    \".github/workflows/frontend.yml\" = {\n      content = file(\"${path.module}/templates/workflows/frontend.yml\")\n    },\n    \".github/workflows/backend.yml\" = {\n      content = file(\"${path.module}/templates/workflows/backend.yml\")\n    },\n    \".github/workflows/integration.yml\" = {\n      content = file(\"${path.module}/templates/workflows/integration.yml\")\n    },\n    \"CODEOWNERS\" = {\n      content = &lt;&lt;-EOT\n      # Frontend code\n      /frontend/        @org/frontend-team\n      *.ts              @org/frontend-team\n      *.tsx             @org/frontend-team\n\n      # Backend code\n      /backend/         @org/backend-team\n      *.go              @org/backend-team\n\n      # Data processing\n      /data-processing/ @org/data-team\n      *.py              @org/data-team\n\n      # CI/CD\n      /.github/         @org/platform-team\n      EOT\n    }\n  }\n\n  gitignore_template = \"Node\"\n}\n</code></pre>"},{"location":"examples/multi-language/#features-demonstrated","title":"Features Demonstrated","text":"<ul> <li>Repository for multi-language project</li> <li>Language-specific workflows</li> <li>Code ownership by language/directory</li> <li>Required checks for different language components</li> <li>Language-appropriate gitignore template</li> </ul>"},{"location":"examples/multi-language/#how-to-apply","title":"How to Apply","text":"<ol> <li>Copy the example code to your Terraform configuration</li> <li>Replace <code>x.y.z</code> with the latest module version</li> <li>Create the necessary workflow template files</li> <li>Set up the required teams in your GitHub organization</li> <li>Run <code>terraform init</code> and <code>terraform apply</code></li> </ol>"},{"location":"examples/multi-language/#additional-configuration","title":"Additional Configuration","text":"<p>For a multi-language project, you might want to add:</p> <ul> <li>Language-specific linters</li> <li>Multiple test workflows</li> <li>Dependency management for different languages</li> </ul>"},{"location":"examples/security-first/","title":"Security-First Configuration Example","text":"<p>This example demonstrates how to create a repository with a security-first approach using this module.</p>"},{"location":"examples/security-first/#usage","title":"Usage","text":"<pre><code>module \"security_first_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"secure-application\"\n  description = \"Security-focused application repository\"\n  visibility  = \"private\"\n\n  # Enable all security features\n  vulnerability_alerts = true\n  secret_scanning      = true\n  advanced_security    = true\n\n  # Strict branch protection\n  branch_protection = {\n    main = {\n      required_reviews             = 2\n      required_checks              = [\"security-scan\", \"sast\", \"dependency-review\", \"codeql\"]\n      dismiss_stale_reviews        = true\n      require_code_owner_reviews   = true\n      require_signed_commits       = true\n      require_up_to_date_branches  = true\n      enforce_admins               = true\n    }\n  }\n\n  # Create security workflows\n  files = {\n    \".github/workflows/codeql.yml\" = {\n      content = file(\"${path.module}/templates/workflows/codeql.yml\")\n    },\n    \".github/workflows/dependency-review.yml\" = {\n      content = file(\"${path.module}/templates/workflows/dependency-review.yml\")\n    },\n    \".github/workflows/secret-scanning.yml\" = {\n      content = file(\"${path.module}/templates/workflows/secret-scanning.yml\")\n    },\n    \".github/workflows/sast.yml\" = {\n      content = file(\"${path.module}/templates/workflows/sast.yml\")\n    },\n    \"SECURITY.md\" = {\n      content = file(\"${path.module}/templates/SECURITY.md\")\n    },\n    \"CODEOWNERS\" = {\n      content = &lt;&lt;-EOT\n      # Security team owns all security configurations\n      /.github/workflows/codeql.yml              @org/security-team\n      /.github/workflows/dependency-review.yml   @org/security-team\n      /.github/workflows/secret-scanning.yml     @org/security-team\n      /.github/workflows/sast.yml                @org/security-team\n      /SECURITY.md                              @org/security-team\n\n      # Default ownership\n      *                                         @org/developers @org/security-team\n      EOT\n    }\n  }\n\n  # Security reporting webhook\n  webhooks = [\n    {\n      url          = \"https://security.example.com/reports\"\n      content_type = \"json\"\n      events       = [\"push\", \"pull_request\", \"code_scanning_alert\", \"security_advisory\"]\n      secret       = var.webhook_secret\n      active       = true\n    }\n  ]\n}\n</code></pre>"},{"location":"examples/security-first/#security-features-demonstrated","title":"Security Features Demonstrated","text":"<ul> <li>Advanced security features (vulnerability alerts, secret scanning, advanced security)</li> <li>Strict branch protection rules</li> <li>Code signing requirements</li> <li>Security-focused workflows (CodeQL, dependency review, secret scanning, SAST)</li> <li>Security policy document</li> <li>Security ownership in CODEOWNERS</li> <li>Security reporting webhook</li> </ul>"},{"location":"examples/security-first/#how-to-apply","title":"How to Apply","text":"<ol> <li>Copy the example code to your Terraform configuration</li> <li>Replace <code>x.y.z</code> with the latest module version</li> <li>Create the necessary workflow template files</li> <li>Set up the required teams in your GitHub organization</li> <li>Set the <code>webhook_secret</code> variable</li> <li>Run <code>terraform init</code> and <code>terraform apply</code></li> </ol>"},{"location":"examples/security-first/#security-best-practices","title":"Security Best Practices","text":"<p>This example incorporates the following security best practices:</p> <ul> <li>Required code reviews</li> <li>Signed commits</li> <li>Automated security scanning</li> <li>Clear security ownership</li> <li>Dependency monitoring</li> <li>Secret scanning</li> <li>Security policy</li> </ul>"},{"location":"getting-started/configuration/","title":"Configuration","text":"<p>This guide explains how to configure the Terraform GitHub Repository module for your specific use case.</p>"},{"location":"getting-started/configuration/#basic-configuration","title":"Basic Configuration","text":"<p>To use this module, add it to your Terraform configuration with the required variables:</p> <pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"example-repository\"\n  description = \"Example GitHub repository managed by Terraform\"\n  visibility  = \"private\"\n}\n</code></pre>"},{"location":"getting-started/configuration/#configuration-variables","title":"Configuration Variables","text":"<p>The module accepts the following configuration variables:</p> Variable Description Type Default name Repository name <code>string</code> Required description Repository description <code>string</code> <code>\"\"</code> visibility Repository visibility (public, private) <code>string</code> <code>\"private\"</code>"},{"location":"getting-started/configuration/#advanced-configuration","title":"Advanced Configuration","text":"<p>For advanced configuration options, see the Advanced Configuration guide.</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<ul> <li>Terraform: &gt;= 1.5.0</li> <li>GitHub Provider: &gt;= 6.0</li> <li>GitHub Token: Personal access token or GitHub App credentials</li> </ul>"},{"location":"getting-started/installation/#github-provider-setup","title":"GitHub Provider Setup","text":""},{"location":"getting-started/installation/#using-personal-access-token","title":"Using Personal Access Token","text":"providers.tf<pre><code>terraform {\n  required_providers {\n    github = {\n      source  = \"integrations/github\"\n      version = \"~&gt; 6.0\"\n    }\n  }\n}\n\nprovider \"github\" {\n  token = var.github_token\n  owner = var.github_owner\n}\n</code></pre>"},{"location":"getting-started/installation/#using-github-app-recommended-for-organizations","title":"Using GitHub App (Recommended for Organizations)","text":"providers.tf<pre><code>provider \"github\" {\n  app_auth {\n    id              = var.github_app_id\n    installation_id = var.github_app_installation_id\n    pem_file        = var.github_app_pem_file\n  }\n  owner = var.github_owner\n}\n</code></pre>"},{"location":"getting-started/installation/#token-permissions","title":"Token Permissions","text":"<p>Your GitHub token needs the following permissions:</p>"},{"location":"getting-started/installation/#for-personal-access-tokens","title":"For Personal Access Tokens","text":"<ul> <li><code>repo</code> - Full control of private repositories</li> <li><code>admin:repo_hook</code> - Repository webhooks and services</li> <li><code>admin:org</code> - Full control of orgs and teams (if managing org repos)</li> <li><code>delete_repo</code> - Delete repositories (if cleanup is needed)</li> </ul>"},{"location":"getting-started/installation/#for-github-apps","title":"For GitHub Apps","text":"<ul> <li>Repository permissions:</li> <li>Administration: Read &amp; write</li> <li>Contents: Read &amp; write  </li> <li>Issues: Read &amp; write</li> <li>Metadata: Read</li> <li>Pull requests: Read &amp; write</li> <li>Security events: Read &amp; write</li> </ul>"},{"location":"getting-started/installation/#environment-variables","title":"Environment Variables","text":"<p>Set up your environment:</p> .env<pre><code># GitHub Configuration\nGITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nGITHUB_OWNER=kpeacocke\n\n# Optional: GitHub App Configuration\nGITHUB_APP_ID=123456\nGITHUB_APP_INSTALLATION_ID=12345678\nGITHUB_APP_PEM_FILE=path/to/private-key.pem\n</code></pre>"},{"location":"getting-started/installation/#terraform-variables","title":"Terraform Variables","text":"<p>Create a <code>terraform.tfvars</code> file:</p> terraform.tfvars<pre><code>github_token = \"ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\ngithub_owner = \"kpeacocke\"\n</code></pre>"},{"location":"getting-started/installation/#verify-installation","title":"Verify Installation","text":"<p>Test your setup:</p> <pre><code>terraform init\nterraform plan\n</code></pre> <p>You should see output indicating Terraform can authenticate with GitHub and plan repository creation.</p>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start Guide - Create your first repository</li> <li>Configuration Guide - Understand all available options</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start","text":"<p>Get up and running with the Terraform GitHub Repository Module in just a few minutes.</p>"},{"location":"getting-started/quick-start/#basic-repository","title":"Basic Repository","text":"<p>Create a simple repository with default security settings:</p> main.tf<pre><code>module \"my_repo\" {\n  source = \"kpeacocke/terraform-github-repo/github\"\n\n  name       = \"my-new-repo\"\n  owners     = [\"@my-team\"]\n  visibility = \"private\"\n}\n</code></pre> <pre><code>terraform init\nterraform apply\n</code></pre>"},{"location":"getting-started/quick-start/#secure-repository","title":"Secure Repository","text":"<p>Create a repository with enhanced security features:</p> main.tf<pre><code>module \"secure_repo\" {\n  source = \"kpeacocke/terraform-github-repo/github\"\n\n  name       = \"secure-project\"\n  owners     = [\"@security-team\", \"@dev-team\"]\n  visibility = \"private\"\n\n  # Security Features\n  enforce_gitflow   = true\n  enforce_security  = true\n  enable_codeql     = true\n  enable_dependabot = true\n\n  # Branch Protection\n  release_branches = [\"main\", \"release/*\"]\n\n  # Automation\n  allow_auto_merge = true\n  enable_dependabot_autoapprove = true\n}\n</code></pre>"},{"location":"getting-started/quick-start/#enterprise-repository","title":"Enterprise Repository","text":"<p>Create a repository with full enterprise governance:</p> main.tf<pre><code>module \"enterprise_repo\" {\n  source = \"kpeacocke/terraform-github-repo/github\"\n\n  name       = \"enterprise-app\"\n  owners     = [\"@platform-team\"]\n  visibility = \"private\"\n\n  # Repository Configuration\n  languages = [\"go\", \"python\", \"javascript\"]\n  license   = \"Apache-2.0\"\n\n  # Governance &amp; Compliance\n  enforce_gitflow           = true\n  enforce_tests             = true\n  enforce_security          = true\n  enforce_docs              = true\n  enforce_issue_integration = true\n  traceability_enabled      = true\n\n  # Security Scanning\n  enable_codeql             = true\n  enable_dependabot         = true\n  enable_secret_scanning    = true\n  enable_secret_scanning_push_protection = true\n\n  # Branch Configuration\n  release_branches = [\"main\", \"release/*\", \"hotfix/*\"]\n  status_check_contexts = [\n    \"ci/build\",\n    \"ci/test\",\n    \"ci/security-scan\"\n  ]\n\n  # Project Integration\n  enforce_project_board = true\n  github_project_url    = \"https://github.com/orgs/kpeacocke/projects/1\"\n}\n</code></pre>"},{"location":"getting-started/quick-start/#outputs","title":"Outputs","text":"<p>Access repository information:</p> outputs.tf<pre><code>output \"repository_url\" {\n  description = \"The HTTPS URL of the repository\"\n  value       = module.my_repo.repository_url\n}\n\noutput \"clone_url\" {\n  description = \"The SSH clone URL\"\n  value       = module.my_repo.repository_ssh_clone_url\n}\n\noutput \"repository_id\" {\n  description = \"The GitHub repository ID\"\n  value       = module.my_repo.repository_id\n}\n</code></pre>"},{"location":"getting-started/quick-start/#what-happens-next","title":"What Happens Next?","text":"<p>When you apply the configuration, the module will:</p> <ol> <li>Create the repository with your specified settings</li> <li>Set up branch protection on main and release branches  </li> <li>Configure security features like CodeQL and secret scanning</li> <li>Add template files (README, LICENSE, SECURITY.md, etc.)</li> <li>Enable workflows for CI/CD and security automation</li> <li>Configure Dependabot for dependency management</li> </ol>"},{"location":"getting-started/quick-start/#verification","title":"Verification","text":"<p>Check that everything was created correctly:</p> <pre><code># View the repository\ngh repo view kpeacocke/my-new-repo\n\n# Check branch protection\ngh api repos/kpeacocke/my-new-repo/branches/main/protection\n\n# List workflows\ngh workflow list --repo kpeacocke/my-new-repo\n</code></pre>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration Guide - Understand all available options</li> <li>Security Features - Deep dive into security capabilities</li> <li>Examples - More comprehensive examples</li> </ul>"},{"location":"user-guide/advanced-configuration/","title":"Advanced Configuration","text":"<p>This guide provides advanced configuration options for the Terraform GitHub Repository module.</p>"},{"location":"user-guide/advanced-configuration/#complete-example","title":"Complete Example","text":"<pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"advanced-repository\"\n  description = \"Advanced GitHub repository managed by Terraform\"\n  visibility  = \"public\"\n\n  branch_protection = {\n    main = {\n      required_reviews             = 2\n      required_checks              = [\"ci-test\", \"security-scan\"]\n      dismiss_stale_reviews        = true\n      require_code_owner_reviews   = true\n      require_up_to_date_branches  = true\n      enforce_admins               = true\n    }\n  }\n\n  topics = [\n    \"terraform\",\n    \"github\",\n    \"automation\"\n  ]\n\n  template = {\n    owner      = \"kpeacocke\"\n    repository = \"terraform-github-repo-template\"\n  }\n\n  collaborators = [\n    {\n      username   = \"collaborator1\"\n      permission = \"push\"\n    },\n    {\n      username   = \"collaborator2\"\n      permission = \"pull\"\n    }\n  ]\n}\n</code></pre>"},{"location":"user-guide/advanced-configuration/#working-with-teams","title":"Working with Teams","text":"<pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"team-repository\"\n  description = \"Repository with team access\"\n  visibility  = \"private\"\n\n  teams = [\n    {\n      name       = \"developers\"\n      permission = \"push\"\n    },\n    {\n      name       = \"security\"\n      permission = \"maintain\"\n    }\n  ]\n}\n</code></pre>"},{"location":"user-guide/advanced-configuration/#custom-webhook-configuration","title":"Custom Webhook Configuration","text":"<pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"webhook-repository\"\n  description = \"Repository with custom webhooks\"\n\n  webhooks = [\n    {\n      url          = \"https://example.com/webhook\"\n      content_type = \"json\"\n      events       = [\"push\", \"pull_request\"]\n      secret       = \"webhook-secret\"\n      active       = true\n    }\n  ]\n}\n</code></pre>"},{"location":"user-guide/basic-usage/","title":"Basic Usage","text":"<p>This guide provides basic usage examples for the Terraform GitHub Repository module.</p>"},{"location":"user-guide/basic-usage/#creating-a-repository","title":"Creating a Repository","text":"<pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"example-repository\"\n  description = \"Example GitHub repository managed by Terraform\"\n  visibility  = \"private\"\n}\n</code></pre>"},{"location":"user-guide/basic-usage/#adding-branch-protection","title":"Adding Branch Protection","text":"<pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"example-repository\"\n  description = \"Example GitHub repository managed by Terraform\"\n  visibility  = \"private\"\n\n  branch_protection = {\n    main = {\n      required_reviews = 1\n      required_checks  = [\"ci-test\"]\n    }\n  }\n}\n</code></pre>"},{"location":"user-guide/basic-usage/#next-steps","title":"Next Steps","text":"<p>For more advanced usage, check out the Advanced Configuration guide or the Security Features documentation.</p>"},{"location":"user-guide/compliance/","title":"Compliance","text":"<p>This guide explains how to use the Terraform GitHub Repository module to help meet compliance requirements.</p>"},{"location":"user-guide/compliance/#compliance-features","title":"Compliance Features","text":"<p>The module provides several features that help meet common compliance requirements:</p>"},{"location":"user-guide/compliance/#audit-logging","title":"Audit Logging","text":"<p>All changes to repository settings are tracked through Terraform state and can be integrated with audit systems.</p>"},{"location":"user-guide/compliance/#codeowners-enforcement","title":"CODEOWNERS Enforcement","text":"<pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"compliant-repository\"\n  description = \"Compliance-focused GitHub repository\"\n\n  branch_protection = {\n    main = {\n      require_code_owner_reviews = true\n    }\n  }\n\n  files = {\n    \"CODEOWNERS\" = {\n      content = &lt;&lt;-EOT\n      # Default owners for everything\n      *       @kpeacocke/security-team\n\n      # Owners for specific files\n      *.tf    @kpeacocke/platform-team\n      *.md    @kpeacocke/docs-team\n      EOT\n    }\n  }\n}\n</code></pre>"},{"location":"user-guide/compliance/#security-policies","title":"Security Policies","text":"<p>The module can automatically create security policies:</p> <pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"compliant-repository\"\n  description = \"Compliance-focused GitHub repository\"\n\n  files = {\n    \"SECURITY.md\" = {\n      content = file(\"${path.module}/templates/SECURITY.md\")\n    }\n  }\n}\n</code></pre>"},{"location":"user-guide/compliance/#compliance-reports","title":"Compliance Reports","text":"<p>The module can generate compliance reports through Terraform outputs that can be used for audit purposes.</p>"},{"location":"user-guide/compliance/#integration-with-compliance-tools","title":"Integration with Compliance Tools","text":"<p>The module works well with compliance scanning tools like:</p> <ul> <li>Checkov</li> <li>Terrascan</li> <li>tfsec</li> <li>Snyk</li> </ul>"},{"location":"user-guide/security-features/","title":"Security Features","text":"<p>This guide describes the security features provided by the Terraform GitHub Repository module.</p>"},{"location":"user-guide/security-features/#branch-protection","title":"Branch Protection","text":"<p>Branch protection rules help enforce quality and security standards on your code:</p> <pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"secure-repository\"\n  description = \"Security-focused GitHub repository\"\n\n  branch_protection = {\n    main = {\n      required_reviews             = 2\n      required_checks              = [\"security-scan\"]\n      dismiss_stale_reviews        = true\n      require_code_owner_reviews   = true\n      require_signed_commits       = true\n      enforce_admins               = true\n    }\n  }\n}\n</code></pre>"},{"location":"user-guide/security-features/#vulnerability-alerting","title":"Vulnerability Alerting","text":"<p>The module enables vulnerability alerting by default:</p> <pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name                 = \"secure-repository\"\n  description          = \"Security-focused GitHub repository\"\n  vulnerability_alerts = true\n}\n</code></pre>"},{"location":"user-guide/security-features/#secret-scanning","title":"Secret Scanning","text":"<p>Secret scanning helps protect against accidentally committed secrets:</p> <pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name            = \"secure-repository\"\n  description     = \"Security-focused GitHub repository\"\n  secret_scanning = true\n}\n</code></pre>"},{"location":"user-guide/security-features/#security-workflows","title":"Security Workflows","text":"<p>The module can automatically set up security workflows:</p> <pre><code>module \"github_repo\" {\n  source  = \"kpeacocke/terraform-github-repo/github\"\n  version = \"x.y.z\"\n\n  name        = \"secure-repository\"\n  description = \"Security-focused GitHub repository\"\n\n  security_workflows = {\n    enable_codeql        = true\n    enable_dependency_review = true\n    enable_secret_scanning = true\n  }\n}\n</code></pre>"}]}